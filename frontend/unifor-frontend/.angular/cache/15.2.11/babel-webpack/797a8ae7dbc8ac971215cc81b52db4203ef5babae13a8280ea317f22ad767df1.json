{"ast":null,"code":"import { from } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"keycloak-angular\";\nexport class TokenInterceptor {\n  constructor(keycloak) {\n    this.keycloak = keycloak;\n  }\n  intercept(req, next) {\n    return from(this.keycloak.getToken()).pipe(switchMap(token => {\n      const authReq = token ? req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      }) : req;\n      return next.handle(authReq);\n    }));\n  }\n  static {\n    this.ɵfac = function TokenInterceptor_Factory(t) {\n      return new (t || TokenInterceptor)(i0.ɵɵinject(i1.KeycloakService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TokenInterceptor,\n      factory: TokenInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,IAAI,QAAQ,MAAM;AAEvC,SAASC,SAAS,QAAQ,gBAAgB;;;AAG1C,OAAM,MAAOC,gBAAgB;EAC3BC,YAAoBC,QAAyB;IAAzB,aAAQ,GAARA,QAAQ;EAAoB;EAEhDC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,OAAOP,IAAI,CAAC,IAAI,CAACI,QAAQ,CAACI,QAAQ,EAAE,CAAC,CAACC,IAAI,CACxCR,SAAS,CAAES,KAAK,IAAI;MAClB,MAAMC,OAAO,GAAGD,KAAK,GACjBJ,GAAG,CAACM,KAAK,CAAC;QAAEC,UAAU,EAAE;UAAEC,aAAa,EAAE,UAAUJ,KAAK;QAAE;MAAE,CAAE,CAAC,GAC/DJ,GAAG;MACP,OAAOC,IAAI,CAACQ,MAAM,CAACJ,OAAO,CAAC;IAC7B,CAAC,CAAC,CACH;EACH;;;uBAZWT,gBAAgB;IAAA;EAAA;;;aAAhBA,gBAAgB;MAAAc,SAAhBd,gBAAgB;IAAA;EAAA","names":["from","switchMap","TokenInterceptor","constructor","keycloak","intercept","req","next","getToken","pipe","token","authReq","clone","setHeaders","Authorization","handle","factory"],"sourceRoot":"","sources":["C:\\DevTools\\Projects\\UNIFOR\\Desafio-UNIFOR-Hexagonal-Quarkus-Angular\\frontend\\unifor-frontend\\src\\app\\core\\auth\\token.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Observable, from } from 'rxjs';\r\nimport { KeycloakService } from 'keycloak-angular';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(private keycloak: KeycloakService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return from(this.keycloak.getToken()).pipe(\r\n      switchMap((token) => {\r\n        const authReq = token\r\n          ? req.clone({ setHeaders: { Authorization: `Bearer ${token}` } })\r\n          : req;\r\n        return next.handle(authReq);\r\n      })\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}