{"ast":null,"code":"import { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TokenInterceptor } from './core/auth/token.interceptor';\nimport { LayoutModule } from './core/layout/layout.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nfunction initializeKeycloak(keycloak) {\n  return () => keycloak.init({\n    config: {\n      url: environment.keycloak.url,\n      realm: environment.keycloak.realm,\n      clientId: environment.keycloak.clientId\n    },\n    initOptions: {\n      onLoad: 'login-required',\n      checkLoginIframe: false\n    }\n  });\n}\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [{\n        provide: APP_INITIALIZER,\n        useFactory: initializeKeycloak,\n        multi: true,\n        deps: [KeycloakService]\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: TokenInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, LayoutModule, KeycloakAngularModule, AppRoutingModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent],\n    imports: [BrowserModule, BrowserAnimationsModule, HttpClientModule, LayoutModule, KeycloakAngularModule, AppRoutingModule]\n  });\n})();","map":{"version":3,"mappings":"AAAA,SAASA,qBAAqB,EAAEC,eAAe,QAAQ,kBAAkB;AACzE,SAASC,eAAe,QAAkB,eAAe;AACzD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,sBAAsB;AAC1E,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,gBAAgB,QAAQ,+BAA+B;AAChE,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,uBAAuB,QAAQ,sCAAsC;AAC9E,SAASC,WAAW,QAAQ,6BAA6B;;AAEzD,SAASC,kBAAkB,CAACC,QAAyB;EACnD,OAAO,MACLA,QAAQ,CAACC,IAAI,CAAC;IACZC,MAAM,EAAE;MACNC,GAAG,EAAEL,WAAW,CAACE,QAAQ,CAACG,GAAG;MAC7BC,KAAK,EAAEN,WAAW,CAACE,QAAQ,CAACI,KAAK;MACjCC,QAAQ,EAAEP,WAAW,CAACE,QAAQ,CAACK;KAChC;IACDC,WAAW,EAAE;MACXC,MAAM,EAAE,gBAAgB;MACxBC,gBAAgB,EAAE;;GAErB,CAAC;AACN;AA2BA,OAAM,MAAOC,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;YAATA,SAAS;MAAAC,YAFRhB,YAAY;IAAA;EAAA;;;iBAbb,CACT;QACEiB,OAAO,EAAEtB,eAAe;QACxBuB,UAAU,EAAEb,kBAAkB;QAC9Bc,KAAK,EAAE,IAAI;QACXC,IAAI,EAAE,CAAC1B,eAAe;OACvB,EACD;QACEuB,OAAO,EAAEnB,iBAAiB;QAC1BuB,QAAQ,EAAEpB,gBAAgB;QAC1BkB,KAAK,EAAE;OACR,CACF;MAAAG,UAnBC1B,aAAa,EACbO,uBAAuB,EACvBN,gBAAgB,EAChBK,YAAY,EACZT,qBAAqB,EACrBM,gBAAgB;IAAA;EAAA;;;2EAiBPgB,SAAS;IAAAQ,eAxBLvB,YAAY;IAAAsB,UAEzB1B,aAAa,EACbO,uBAAuB,EACvBN,gBAAgB,EAChBK,YAAY,EACZT,qBAAqB,EACrBM,gBAAgB;EAAA;AAAA","names":["KeycloakAngularModule","KeycloakService","APP_INITIALIZER","BrowserModule","HttpClientModule","HTTP_INTERCEPTORS","AppRoutingModule","AppComponent","TokenInterceptor","LayoutModule","BrowserAnimationsModule","environment","initializeKeycloak","keycloak","init","config","url","realm","clientId","initOptions","onLoad","checkLoginIframe","AppModule","bootstrap","provide","useFactory","multi","deps","useClass","imports","declarations"],"sourceRoot":"","sources":["C:\\DevTools\\Projects\\UNIFOR\\Desafio-UNIFOR-Hexagonal-Quarkus-Angular\\frontend\\unifor-frontend\\src\\app\\app.module.ts"],"sourcesContent":["import { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TokenInterceptor } from './core/auth/token.interceptor';\nimport { LayoutModule } from './core/layout/layout.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { environment } from '../environments/environment';\n\nfunction initializeKeycloak(keycloak: KeycloakService) {\n  return () =>\n    keycloak.init({\n      config: {\n        url: environment.keycloak.url,\n        realm: environment.keycloak.realm,\n        clientId: environment.keycloak.clientId\n      },\n      initOptions: {\n        onLoad: 'login-required',\n        checkLoginIframe: false\n      }\n    });\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    LayoutModule,\n    KeycloakAngularModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializeKeycloak,\n      multi: true,\n      deps: [KeycloakService]\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}