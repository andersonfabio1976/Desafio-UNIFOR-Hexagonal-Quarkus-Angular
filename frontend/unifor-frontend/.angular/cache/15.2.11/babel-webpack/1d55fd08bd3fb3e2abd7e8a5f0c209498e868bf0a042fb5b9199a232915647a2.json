{"ast":null,"code":"import _asyncToGenerator from \"C:/DevTools/Projects/UNIFOR/Desafio-UNIFOR-Hexagonal-Quarkus-Angular/frontend/unifor-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// @ts-check\n/**\n * @import {Acr, KeycloakAccountOptions, KeycloakAdapter, KeycloakConfig, KeycloakError, KeycloakFlow, KeycloakInitOptions, KeycloakLoginOptions, KeycloakLogoutOptions, KeycloakPkceMethod, KeycloakProfile, KeycloakRegisterOptions, KeycloakResourceAccess, KeycloakResponseMode, KeycloakResponseType, KeycloakRoles, KeycloakTokenParsed, OpenIdProviderMetadata} from \"./keycloak.ts\"\n */\n/*\n * Copyright 2016 Red Hat, Inc. and/or its affiliates\n * and other contributors as indicated by the @author tags.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CONTENT_TYPE_JSON = 'application/json';\n\n/**\n * @typedef {Object} Endpoints\n * @property {() => string} authorize\n * @property {() => string} token\n * @property {() => string} logout\n * @property {() => string} checkSessionIframe\n * @property {() => string=} thirdPartyCookiesIframe\n * @property {() => string} register\n * @property {() => string} userinfo\n */\n\n/**\n * @typedef {Object} LoginIframe\n * @property {boolean} enable\n * @property {((error: Error | null, value?: boolean) => void)[]} callbackList\n * @property {number} interval\n * @property {HTMLIFrameElement=} iframe\n * @property {string=} iframeOrigin\n */\n\nexport default class Keycloak {\n  /** @type {Pick<PromiseWithResolvers<boolean>, 'resolve' | 'reject'>[]} */\n  #refreshQueue = [];\n  /** @type {KeycloakAdapter} */\n  #adapter;\n  /** @type {boolean} */\n  #useNonce = true;\n  /** @type {CallbackStorage} */\n  #callbackStorage;\n  #logInfo = this.#createLogger(console.info);\n  #logWarn = this.#createLogger(console.warn);\n  /** @type {LoginIframe} */\n  #loginIframe = {\n    enable: true,\n    callbackList: [],\n    interval: 5\n  };\n\n  /** @type {KeycloakConfig} config */\n  #config;\n  didInitialize = false;\n  authenticated = false;\n  loginRequired = false;\n  /** @type {KeycloakResponseMode} */\n  responseMode = 'fragment';\n  /** @type {KeycloakResponseType} */\n  responseType = 'code';\n  /** @type {KeycloakFlow} */\n  flow = 'standard';\n  /** @type {number?} */\n  timeSkew = null;\n  /** @type {string=} */\n  redirectUri;\n  /** @type {string=} */\n  silentCheckSsoRedirectUri;\n  /** @type {boolean} */\n  silentCheckSsoFallback = true;\n  /** @type {KeycloakPkceMethod} */\n  pkceMethod = 'S256';\n  enableLogging = false;\n  /** @type {'GET' | 'POST'} */\n  logoutMethod = 'GET';\n  /** @type {string=} */\n  scope;\n  messageReceiveTimeout = 10000;\n  /** @type {string=} */\n  idToken;\n  /** @type {KeycloakTokenParsed=} */\n  idTokenParsed;\n  /** @type {string=} */\n  token;\n  /** @type {KeycloakTokenParsed=} */\n  tokenParsed;\n  /** @type {string=} */\n  refreshToken;\n  /** @type {KeycloakTokenParsed=} */\n  refreshTokenParsed;\n  /** @type {string=} */\n  clientId;\n  /** @type {string=} */\n  sessionId;\n  /** @type {string=} */\n  subject;\n  /** @type {string=} */\n  authServerUrl;\n  /** @type {string=} */\n  realm;\n  /** @type {KeycloakRoles=} */\n  realmAccess;\n  /** @type {KeycloakResourceAccess=} */\n  resourceAccess;\n  /** @type {KeycloakProfile=} */\n  profile;\n  /** @type {{}=} */\n  userInfo;\n  /** @type {Endpoints} */\n  endpoints;\n  /** @type {number=} */\n  tokenTimeoutHandle;\n  /** @type {() => void=} */\n  onAuthSuccess;\n  /** @type {(errorData?: KeycloakError) => void=} */\n  onAuthError;\n  /** @type {() => void=} */\n  onAuthRefreshSuccess;\n  /** @type {() => void=} */\n  onAuthRefreshError;\n  /** @type {() => void=} */\n  onTokenExpired;\n  /** @type {() => void=} */\n  onAuthLogout;\n  /** @type {(authenticated: boolean) => void=} */\n  onReady;\n  /** @type {(status: 'success' | 'cancelled' | 'error', action: string) => void=} */\n  onActionUpdate;\n\n  /**\n   * @param {KeycloakConfig} config\n   */\n  constructor(config) {\n    if (typeof config !== 'string' && !isObject(config)) {\n      throw new Error(\"The 'Keycloak' constructor must be provided with a configuration object, or a URL to a JSON configuration file.\");\n    }\n    if (isObject(config)) {\n      const requiredProperties = 'oidcProvider' in config ? ['clientId'] : ['url', 'realm', 'clientId'];\n      for (const property of requiredProperties) {\n        if (!(property in config)) {\n          throw new Error(`The configuration object is missing the required '${property}' property.`);\n        }\n      }\n    }\n    if (!globalThis.isSecureContext) {\n      this.#logWarn(\"[KEYCLOAK] Keycloak JS must be used in a 'secure context' to function properly as it relies on browser APIs that are otherwise not available.\\n\" + 'Continuing to run your application insecurely will lead to unexpected behavior and breakage.\\n\\n' + 'For more information see: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts');\n    }\n    this.#config = config;\n  }\n\n  /**\n   * @param {KeycloakInitOptions} initOptions\n   * @returns {Promise<boolean>}\n   */\n  init() {\n    var _this = this;\n    return _asyncToGenerator(function* (initOptions = {}) {\n      if (_this.didInitialize) {\n        throw new Error(\"A 'Keycloak' instance can only be initialized once.\");\n      }\n      _this.didInitialize = true;\n      _this.#callbackStorage = createCallbackStorage();\n      const adapters = ['default', 'cordova', 'cordova-native'];\n      if (typeof initOptions.adapter === 'string' && adapters.includes(initOptions.adapter)) {\n        _this.#adapter = _this.#loadAdapter(initOptions.adapter);\n      } else if (typeof initOptions.adapter === 'object') {\n        _this.#adapter = initOptions.adapter;\n      } else if ('Cordova' in window || 'cordova' in window) {\n        _this.#adapter = _this.#loadAdapter('cordova');\n      } else {\n        _this.#adapter = _this.#loadAdapter('default');\n      }\n      if (typeof initOptions.useNonce !== 'undefined') {\n        _this.#useNonce = initOptions.useNonce;\n      }\n      if (typeof initOptions.checkLoginIframe !== 'undefined') {\n        _this.#loginIframe.enable = initOptions.checkLoginIframe;\n      }\n      if (initOptions.checkLoginIframeInterval) {\n        _this.#loginIframe.interval = initOptions.checkLoginIframeInterval;\n      }\n      if (initOptions.onLoad === 'login-required') {\n        _this.loginRequired = true;\n      }\n      if (initOptions.responseMode) {\n        if (initOptions.responseMode === 'query' || initOptions.responseMode === 'fragment') {\n          _this.responseMode = initOptions.responseMode;\n        } else {\n          throw new Error('Invalid value for responseMode');\n        }\n      }\n      if (initOptions.flow) {\n        switch (initOptions.flow) {\n          case 'standard':\n            _this.responseType = 'code';\n            break;\n          case 'implicit':\n            _this.responseType = 'id_token token';\n            break;\n          case 'hybrid':\n            _this.responseType = 'code id_token token';\n            break;\n          default:\n            throw new Error('Invalid value for flow');\n        }\n        _this.flow = initOptions.flow;\n      }\n      if (typeof initOptions.timeSkew === 'number') {\n        _this.timeSkew = initOptions.timeSkew;\n      }\n      if (initOptions.redirectUri) {\n        _this.redirectUri = initOptions.redirectUri;\n      }\n      if (initOptions.silentCheckSsoRedirectUri) {\n        _this.silentCheckSsoRedirectUri = initOptions.silentCheckSsoRedirectUri;\n      }\n      if (typeof initOptions.silentCheckSsoFallback === 'boolean') {\n        _this.silentCheckSsoFallback = initOptions.silentCheckSsoFallback;\n      }\n      if (typeof initOptions.pkceMethod !== 'undefined') {\n        if (initOptions.pkceMethod !== 'S256' && initOptions.pkceMethod !== false) {\n          throw new TypeError(`Invalid value for pkceMethod', expected 'S256' or false but got ${initOptions.pkceMethod}.`);\n        }\n        _this.pkceMethod = initOptions.pkceMethod;\n      }\n      if (typeof initOptions.enableLogging === 'boolean') {\n        _this.enableLogging = initOptions.enableLogging;\n      }\n      if (initOptions.logoutMethod === 'POST') {\n        _this.logoutMethod = 'POST';\n      }\n      if (typeof initOptions.scope === 'string') {\n        _this.scope = initOptions.scope;\n      }\n      if (typeof initOptions.messageReceiveTimeout === 'number' && initOptions.messageReceiveTimeout > 0) {\n        _this.messageReceiveTimeout = initOptions.messageReceiveTimeout;\n      }\n      yield _this.#loadConfig();\n      yield _this.#check3pCookiesSupported();\n      yield _this.#processInit(initOptions);\n      _this.onReady?.(_this.authenticated);\n      return _this.authenticated;\n    }).apply(this, arguments);\n  }\n\n  /**\n   * @param {\"default\" | \"cordova\" | \"cordova-native\"} type\n   * @returns {KeycloakAdapter}\n   */\n  #loadAdapter(type) {\n    if (type === 'default') {\n      return this.#loadDefaultAdapter();\n    }\n    if (type === 'cordova') {\n      this.#loginIframe.enable = false;\n      return this.#loadCordovaAdapter();\n    }\n    if (type === 'cordova-native') {\n      this.#loginIframe.enable = false;\n      return this.#loadCordovaNativeAdapter();\n    }\n    throw new Error('invalid adapter type: ' + type);\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadDefaultAdapter() {\n    var _this2 = this;\n    /** @type {KeycloakAdapter['redirectUri']}{} */\n    const redirectUri = options => {\n      return options?.redirectUri || this.redirectUri || globalThis.location.href;\n    };\n    return {\n      login: function () {\n        var _ref = _asyncToGenerator(function* (options) {\n          window.location.assign(yield _this2.createLoginUrl(options));\n          return yield new Promise(() => {});\n        });\n        return function login(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      logout: function () {\n        var _ref2 = _asyncToGenerator(function* (options) {\n          const logoutMethod = options?.logoutMethod ?? _this2.logoutMethod;\n          if (logoutMethod === 'GET') {\n            window.location.replace(_this2.createLogoutUrl(options));\n            return;\n          }\n\n          // Create form to send POST request.\n          const form = document.createElement('form');\n          form.setAttribute('method', 'POST');\n          form.setAttribute('action', _this2.createLogoutUrl(options));\n          form.style.display = 'none';\n\n          // Add data to form as hidden input fields.\n          const data = {\n            id_token_hint: _this2.idToken,\n            client_id: _this2.clientId,\n            post_logout_redirect_uri: redirectUri(options)\n          };\n          for (const [name, value] of Object.entries(data)) {\n            const input = document.createElement('input');\n            input.setAttribute('type', 'hidden');\n            input.setAttribute('name', name);\n            input.setAttribute('value', /** @type {string} */value);\n            form.appendChild(input);\n          }\n\n          // Append form to page and submit it to perform logout and redirect.\n          document.body.appendChild(form);\n          form.submit();\n        });\n        return function logout(_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      register: function () {\n        var _ref3 = _asyncToGenerator(function* (options) {\n          window.location.assign(yield _this2.createRegisterUrl(options));\n          return yield new Promise(() => {});\n        });\n        return function register(_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      accountManagement: function () {\n        var _ref4 = _asyncToGenerator(function* () {\n          const accountUrl = _this2.createAccountUrl();\n          if (typeof accountUrl !== 'undefined') {\n            window.location.href = accountUrl;\n          } else {\n            throw new Error('Not supported by the OIDC server');\n          }\n          return yield new Promise(() => {});\n        });\n        return function accountManagement() {\n          return _ref4.apply(this, arguments);\n        };\n      }(),\n      redirectUri\n    };\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadCordovaAdapter() {\n    var _this3 = this;\n    /**\n     * @param {string} loginUrl\n     * @param {string} target\n     * @param {string} options\n     * @returns {WindowProxy | null}\n     */\n    const cordovaOpenWindowWrapper = (loginUrl, target, options) => {\n      if (window.cordova && window.cordova.InAppBrowser) {\n        // Use inappbrowser for IOS and Android if available\n        return window.cordova.InAppBrowser.open(loginUrl, target, options);\n      } else {\n        return window.open(loginUrl, target, options);\n      }\n    };\n    const shallowCloneCordovaOptions = userOptions => {\n      if (userOptions && userOptions.cordovaOptions) {\n        return Object.keys(userOptions.cordovaOptions).reduce((options, optionName) => {\n          options[optionName] = userOptions.cordovaOptions[optionName];\n          return options;\n        }, {});\n      } else {\n        return {};\n      }\n    };\n    const formatCordovaOptions = cordovaOptions => {\n      return Object.keys(cordovaOptions).reduce((options, optionName) => {\n        options.push(optionName + '=' + cordovaOptions[optionName]);\n        return options;\n      }, []).join(',');\n    };\n    const createCordovaOptions = userOptions => {\n      const cordovaOptions = shallowCloneCordovaOptions(userOptions);\n      cordovaOptions.location = 'no';\n      if (userOptions && userOptions.prompt === 'none') {\n        cordovaOptions.hidden = 'yes';\n      }\n      return formatCordovaOptions(cordovaOptions);\n    };\n    const getCordovaRedirectUri = () => {\n      return this.redirectUri || 'http://localhost';\n    };\n    return {\n      login: function () {\n        var _ref5 = _asyncToGenerator(function* (options) {\n          const cordovaOptions = createCordovaOptions(options);\n          const loginUrl = yield _this3.createLoginUrl(options);\n          const ref = cordovaOpenWindowWrapper(loginUrl, '_blank', cordovaOptions);\n          let completed = false;\n          let closed = false;\n          function closeBrowser() {\n            closed = true;\n            ref.close();\n          }\n          ;\n          return yield new Promise((resolve, reject) => {\n            ref.addEventListener('loadstart', /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator(function* (event) {\n                if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n                  const callback = _this3.#parseCallback(event.url);\n                  try {\n                    yield _this3.#processCallback(callback);\n                    resolve();\n                  } catch (error) {\n                    reject(error);\n                  }\n                  closeBrowser();\n                  completed = true;\n                }\n              });\n              return function (_x5) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n            ref.addEventListener('loaderror', /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator(function* (event) {\n                if (!completed) {\n                  if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n                    const callback = _this3.#parseCallback(event.url);\n                    try {\n                      yield _this3.#processCallback(callback);\n                      resolve();\n                    } catch (error) {\n                      reject(error);\n                    }\n                    closeBrowser();\n                    completed = true;\n                  } else {\n                    reject(new Error('Unable to process login.'));\n                    closeBrowser();\n                  }\n                }\n              });\n              return function (_x6) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n            ref.addEventListener('exit', function (event) {\n              if (!closed) {\n                reject(new Error('User closed the login window.'));\n              }\n            });\n          });\n        });\n        return function login(_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }(),\n      logout: function () {\n        var _ref8 = _asyncToGenerator(function* (options) {\n          const logoutUrl = _this3.createLogoutUrl(options);\n          const ref = cordovaOpenWindowWrapper(logoutUrl, '_blank', 'location=no,hidden=yes,clearcache=yes');\n          let error = false;\n          ref.addEventListener('loadstart', event => {\n            if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n              ref.close();\n            }\n          });\n          ref.addEventListener('loaderror', event => {\n            if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n              ref.close();\n            } else {\n              error = true;\n              ref.close();\n            }\n          });\n          yield new Promise((resolve, reject) => {\n            ref.addEventListener('exit', () => {\n              if (error) {\n                reject(new Error('User closed the login window.'));\n              } else {\n                _this3.clearToken();\n                resolve();\n              }\n            });\n          });\n        });\n        return function logout(_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }(),\n      register: function () {\n        var _ref9 = _asyncToGenerator(function* (options) {\n          const registerUrl = yield _this3.createRegisterUrl();\n          const cordovaOptions = createCordovaOptions(options);\n          const ref = cordovaOpenWindowWrapper(registerUrl, '_blank', cordovaOptions);\n\n          /** @type {Promise<void>} */\n          const promise = new Promise((resolve, reject) => {\n            ref.addEventListener('loadstart', /*#__PURE__*/function () {\n              var _ref0 = _asyncToGenerator(function* (event) {\n                if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n                  ref.close();\n                  const oauth = _this3.#parseCallback(event.url);\n                  try {\n                    yield _this3.#processCallback(oauth);\n                    resolve();\n                  } catch (error) {\n                    reject(error);\n                  }\n                }\n              });\n              return function (_x9) {\n                return _ref0.apply(this, arguments);\n              };\n            }());\n          });\n          yield promise;\n        });\n        return function register(_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }(),\n      accountManagement: function () {\n        var _ref1 = _asyncToGenerator(function* () {\n          const accountUrl = _this3.createAccountUrl();\n          if (typeof accountUrl !== 'undefined') {\n            const ref = cordovaOpenWindowWrapper(accountUrl, '_blank', 'location=no');\n            ref.addEventListener('loadstart', function (event) {\n              if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n                ref.close();\n              }\n            });\n          } else {\n            throw new Error('Not supported by the OIDC server');\n          }\n        });\n        return function accountManagement() {\n          return _ref1.apply(this, arguments);\n        };\n      }(),\n      redirectUri: () => {\n        return getCordovaRedirectUri();\n      }\n    };\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadCordovaNativeAdapter() {\n    var _this4 = this;\n    /* global universalLinks */\n    return {\n      login: function () {\n        var _ref10 = _asyncToGenerator(function* (options) {\n          const loginUrl = yield _this4.createLoginUrl(options);\n          yield new Promise((resolve, reject) => {\n            universalLinks.subscribe('keycloak', /*#__PURE__*/function () {\n              var _ref11 = _asyncToGenerator(function* (event) {\n                universalLinks.unsubscribe('keycloak');\n                window.cordova.plugins.browsertab.close();\n                const oauth = _this4.#parseCallback(event.url);\n                try {\n                  yield _this4.#processCallback(oauth);\n                  resolve();\n                } catch (error) {\n                  reject(error);\n                }\n              });\n              return function (_x1) {\n                return _ref11.apply(this, arguments);\n              };\n            }());\n            window.cordova.plugins.browsertab.openUrl(loginUrl);\n          });\n        });\n        return function login(_x0) {\n          return _ref10.apply(this, arguments);\n        };\n      }(),\n      logout: function () {\n        var _ref12 = _asyncToGenerator(function* (options) {\n          const logoutUrl = _this4.createLogoutUrl(options);\n          yield new Promise(resolve => {\n            universalLinks.subscribe('keycloak', () => {\n              universalLinks.unsubscribe('keycloak');\n              window.cordova.plugins.browsertab.close();\n              _this4.clearToken();\n              resolve();\n            });\n            window.cordova.plugins.browsertab.openUrl(logoutUrl);\n          });\n        });\n        return function logout(_x10) {\n          return _ref12.apply(this, arguments);\n        };\n      }(),\n      register: function () {\n        var _ref13 = _asyncToGenerator(function* (options) {\n          const registerUrl = yield _this4.createRegisterUrl(options);\n          yield new Promise((resolve, reject) => {\n            universalLinks.subscribe('keycloak', /*#__PURE__*/function () {\n              var _ref14 = _asyncToGenerator(function* (event) {\n                universalLinks.unsubscribe('keycloak');\n                window.cordova.plugins.browsertab.close();\n                const oauth = _this4.#parseCallback(event.url);\n                try {\n                  yield _this4.#processCallback(oauth);\n                  resolve();\n                } catch (error) {\n                  reject(error);\n                }\n              });\n              return function (_x12) {\n                return _ref14.apply(this, arguments);\n              };\n            }());\n            window.cordova.plugins.browsertab.openUrl(registerUrl);\n          });\n        });\n        return function register(_x11) {\n          return _ref13.apply(this, arguments);\n        };\n      }(),\n      accountManagement: function () {\n        var _ref15 = _asyncToGenerator(function* () {\n          const accountUrl = _this4.createAccountUrl();\n          if (typeof accountUrl !== 'undefined') {\n            window.cordova.plugins.browsertab.openUrl(accountUrl);\n          } else {\n            throw new Error('Not supported by the OIDC server');\n          }\n        });\n        return function accountManagement() {\n          return _ref15.apply(this, arguments);\n        };\n      }(),\n      redirectUri: options => {\n        if (options && options.redirectUri) {\n          return options.redirectUri;\n        } else if (this.redirectUri) {\n          return this.redirectUri;\n        } else {\n          return 'http://localhost';\n        }\n      }\n    };\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  #loadConfig() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (typeof _this5.#config === 'string') {\n        const jsonConfig = yield fetchJsonConfig(_this5.#config);\n        _this5.authServerUrl = jsonConfig['auth-server-url'];\n        _this5.realm = jsonConfig.realm;\n        _this5.clientId = jsonConfig.resource;\n        _this5.#setupEndpoints();\n      } else {\n        _this5.clientId = _this5.#config.clientId;\n        if ('oidcProvider' in _this5.#config) {\n          yield _this5.#loadOidcConfig(_this5.#config.oidcProvider);\n        } else {\n          _this5.authServerUrl = _this5.#config.url;\n          _this5.realm = _this5.#config.realm;\n          _this5.#setupEndpoints();\n        }\n      }\n    })();\n  }\n\n  /**\n   * @returns {void}\n   */\n  #setupEndpoints() {\n    this.endpoints = {\n      authorize: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/auth';\n      },\n      token: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/token';\n      },\n      logout: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/logout';\n      },\n      checkSessionIframe: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/login-status-iframe.html';\n      },\n      thirdPartyCookiesIframe: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/3p-cookies/step1.html';\n      },\n      register: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/registrations';\n      },\n      userinfo: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/userinfo';\n      }\n    };\n  }\n\n  /**\n   * @param {string | OpenIdProviderMetadata} oidcProvider\n   * @returns {Promise<void>}\n   */\n  #loadOidcConfig(oidcProvider) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (typeof oidcProvider === 'string') {\n        const url = `${stripTrailingSlash(oidcProvider)}/.well-known/openid-configuration`;\n        const openIdConfig = yield fetchOpenIdConfig(url);\n        _this6.#setupOidcEndpoints(openIdConfig);\n      } else {\n        _this6.#setupOidcEndpoints(oidcProvider);\n      }\n    })();\n  }\n\n  /**\n   * @param {OpenIdProviderMetadata} config\n   * @returns {void}\n   */\n  #setupOidcEndpoints(config) {\n    this.endpoints = {\n      authorize() {\n        return config.authorization_endpoint;\n      },\n      token() {\n        return config.token_endpoint;\n      },\n      logout() {\n        if (!config.end_session_endpoint) {\n          throw new Error('Not supported by the OIDC server');\n        }\n        return config.end_session_endpoint;\n      },\n      checkSessionIframe() {\n        if (!config.check_session_iframe) {\n          throw new Error('Not supported by the OIDC server');\n        }\n        return config.check_session_iframe;\n      },\n      register() {\n        throw new Error('Redirection to \"Register user\" page not supported in standard OIDC mode');\n      },\n      userinfo() {\n        if (!config.userinfo_endpoint) {\n          throw new Error('Not supported by the OIDC server');\n        }\n        return config.userinfo_endpoint;\n      }\n    };\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  #check3pCookiesSupported() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this7.#loginIframe.enable && !_this7.silentCheckSsoRedirectUri || typeof _this7.endpoints.thirdPartyCookiesIframe !== 'function') {\n        return;\n      }\n      const iframe = document.createElement('iframe');\n      iframe.setAttribute('src', _this7.endpoints.thirdPartyCookiesIframe());\n      iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n      iframe.setAttribute('title', 'keycloak-3p-check-iframe');\n      iframe.style.display = 'none';\n      document.body.appendChild(iframe);\n\n      /** @type {Promise<void>} */\n      const promise = new Promise(resolve => {\n        /**\n         * @param {MessageEvent} event\n         */\n        const messageCallback = event => {\n          if (iframe.contentWindow !== event.source) {\n            return;\n          }\n          if (event.data !== 'supported' && event.data !== 'unsupported') {\n            return;\n          } else if (event.data === 'unsupported') {\n            _this7.#logWarn('[KEYCLOAK] Your browser is blocking access to 3rd-party cookies, this means:\\n\\n' + ' - It is not possible to retrieve tokens without redirecting to the Keycloak server (a.k.a. no support for silent authentication).\\n' + ' - It is not possible to automatically detect changes to the session status (such as the user logging out in another tab).\\n\\n' + 'For more information see: https://www.keycloak.org/securing-apps/javascript-adapter#_modern_browsers');\n            _this7.#loginIframe.enable = false;\n            if (_this7.silentCheckSsoFallback) {\n              _this7.silentCheckSsoRedirectUri = undefined;\n            }\n          }\n          document.body.removeChild(iframe);\n          window.removeEventListener('message', messageCallback);\n          resolve();\n        };\n        window.addEventListener('message', messageCallback, false);\n      });\n      return yield applyTimeoutToPromise(promise, _this7.messageReceiveTimeout, 'Timeout when waiting for 3rd party check iframe message.');\n    })();\n  }\n\n  /**\n   * @param {KeycloakInitOptions} initOptions\n   * @returns {Promise<void>}\n   */\n  #processInit(initOptions) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const callback = _this8.#parseCallback(window.location.href);\n      if (callback?.redirectUri) {\n        window.history.replaceState(window.history.state, '', callback.redirectUri);\n      }\n      if (callback && callback.valid) {\n        yield _this8.#setupCheckLoginIframe();\n        yield _this8.#processCallback(callback);\n        return;\n      }\n\n      /** @param {boolean} prompt */\n      const doLogin = /*#__PURE__*/function () {\n        var _ref16 = _asyncToGenerator(function* (prompt) {\n          /** @type {KeycloakLoginOptions} */\n          const options = {};\n          if (!prompt) {\n            options.prompt = 'none';\n          }\n          if (initOptions.locale) {\n            options.locale = initOptions.locale;\n          }\n          yield _this8.login(options);\n        });\n        return function doLogin(_x13) {\n          return _ref16.apply(this, arguments);\n        };\n      }();\n      const onLoad = /*#__PURE__*/function () {\n        var _ref17 = _asyncToGenerator(function* () {\n          switch (initOptions.onLoad) {\n            case 'check-sso':\n              if (_this8.#loginIframe.enable) {\n                yield _this8.#setupCheckLoginIframe();\n                const unchanged = yield _this8.#checkLoginIframe();\n                if (!unchanged) {\n                  _this8.silentCheckSsoRedirectUri ? yield _this8.#checkSsoSilently() : yield doLogin(false);\n                }\n              } else {\n                _this8.silentCheckSsoRedirectUri ? yield _this8.#checkSsoSilently() : yield doLogin(false);\n              }\n              break;\n            case 'login-required':\n              yield doLogin(true);\n              break;\n            default:\n              throw new Error('Invalid value for onLoad');\n          }\n        });\n        return function onLoad() {\n          return _ref17.apply(this, arguments);\n        };\n      }();\n      if (initOptions.token && initOptions.refreshToken) {\n        _this8.#setToken(initOptions.token, initOptions.refreshToken, initOptions.idToken);\n        if (_this8.#loginIframe.enable) {\n          yield _this8.#setupCheckLoginIframe();\n          const unchanged = yield _this8.#checkLoginIframe();\n          if (unchanged) {\n            _this8.onAuthSuccess?.();\n            _this8.#scheduleCheckIframe();\n          }\n        } else {\n          try {\n            yield _this8.updateToken(-1);\n            _this8.onAuthSuccess?.();\n          } catch (error) {\n            _this8.onAuthError?.();\n            if (initOptions.onLoad) {\n              yield onLoad();\n            } else {\n              throw error;\n            }\n          }\n        }\n      } else if (initOptions.onLoad) {\n        yield onLoad();\n      }\n    })();\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  #setupCheckLoginIframe() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this9.#loginIframe.enable || _this9.#loginIframe.iframe) {\n        return;\n      }\n      const iframe = document.createElement('iframe');\n      _this9.#loginIframe.iframe = iframe;\n      iframe.setAttribute('src', _this9.endpoints.checkSessionIframe());\n      iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n      iframe.setAttribute('title', 'keycloak-session-iframe');\n      iframe.style.display = 'none';\n      document.body.appendChild(iframe);\n\n      /**\n       * @param {MessageEvent} event\n       */\n      const messageCallback = event => {\n        if (event.origin !== _this9.#loginIframe.iframeOrigin || _this9.#loginIframe.iframe?.contentWindow !== event.source) {\n          return;\n        }\n        if (!(event.data === 'unchanged' || event.data === 'changed' || event.data === 'error')) {\n          return;\n        }\n        if (event.data !== 'unchanged') {\n          _this9.clearToken();\n        }\n        const callbacks = _this9.#loginIframe.callbackList;\n        _this9.#loginIframe.callbackList = [];\n        for (const callback of callbacks.reverse()) {\n          if (event.data === 'error') {\n            callback(new Error('Error while checking login iframe'));\n          } else {\n            callback(null, event.data === 'unchanged');\n          }\n        }\n      };\n      window.addEventListener('message', messageCallback, false);\n\n      /** @type {Promise<void>} */\n      const promise = new Promise(resolve => {\n        iframe.addEventListener('load', () => {\n          const authUrl = _this9.endpoints.authorize();\n          if (authUrl.startsWith('/')) {\n            _this9.#loginIframe.iframeOrigin = globalThis.location.origin;\n          } else {\n            _this9.#loginIframe.iframeOrigin = new URL(authUrl).origin;\n          }\n          resolve();\n        });\n      });\n      yield promise;\n    })();\n  }\n\n  /**\n   * @returns {Promise<boolean | undefined>}\n   */\n  #checkLoginIframe() {\n    var _this0 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this0.#loginIframe.iframe || !_this0.#loginIframe.iframeOrigin) {\n        return;\n      }\n      const message = `${_this0.clientId} ${_this0.sessionId ? _this0.sessionId : ''}`;\n      const origin = _this0.#loginIframe.iframeOrigin;\n\n      /** @type {Promise<boolean>} */\n      const promise = new Promise((resolve, reject) => {\n        /** @type {(error: Error | null, value?: boolean) => void} */\n        const callback = (error, result) => error ? reject(error) : resolve( /** @type {boolean} */result);\n        _this0.#loginIframe.callbackList.push(callback);\n        if (_this0.#loginIframe.callbackList.length === 1) {\n          _this0.#loginIframe.iframe?.contentWindow?.postMessage(message, origin);\n        }\n      });\n      return yield promise;\n    })();\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  #checkSsoSilently() {\n    var _this1 = this;\n    return _asyncToGenerator(function* () {\n      const iframe = document.createElement('iframe');\n      const src = yield _this1.createLoginUrl({\n        prompt: 'none',\n        redirectUri: _this1.silentCheckSsoRedirectUri\n      });\n      iframe.setAttribute('src', src);\n      iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin');\n      iframe.setAttribute('title', 'keycloak-silent-check-sso');\n      iframe.style.display = 'none';\n      document.body.appendChild(iframe);\n      return yield new Promise((resolve, reject) => {\n        /**\n         * @param {MessageEvent} event\n         */\n        const _messageCallback = /*#__PURE__*/function () {\n          var _ref18 = _asyncToGenerator(function* (event) {\n            if (event.origin !== window.location.origin || iframe.contentWindow !== event.source) {\n              return;\n            }\n            const oauth = _this1.#parseCallback(event.data);\n            try {\n              yield _this1.#processCallback(oauth);\n              resolve();\n            } catch (error) {\n              reject(error);\n            }\n            document.body.removeChild(iframe);\n            window.removeEventListener('message', _messageCallback);\n          });\n          return function messageCallback(_x14) {\n            return _ref18.apply(this, arguments);\n          };\n        }();\n        window.addEventListener('message', _messageCallback);\n      });\n    })();\n  }\n  /**\n   * @param {string} url\n   */\n  #parseCallback(url) {\n    const oauth = this.#parseCallbackUrl(url);\n    if (!oauth) {\n      return;\n    }\n    const oauthState = this.#callbackStorage.get(oauth.state);\n    if (oauthState) {\n      oauth.valid = true;\n      oauth.redirectUri = oauthState.redirectUri;\n      oauth.storedNonce = oauthState.nonce;\n      oauth.prompt = oauthState.prompt;\n      oauth.pkceCodeVerifier = oauthState.pkceCodeVerifier;\n      oauth.loginOptions = oauthState.loginOptions;\n    }\n    return oauth;\n  }\n\n  /**\n   * @param {string} urlString\n   */\n  #parseCallbackUrl(urlString) {\n    let supportedParams = [];\n    switch (this.flow) {\n      case 'standard':\n        supportedParams = ['code', 'state', 'session_state', 'kc_action_status', 'kc_action', 'iss'];\n        break;\n      case 'implicit':\n        supportedParams = ['access_token', 'token_type', 'id_token', 'state', 'session_state', 'expires_in', 'kc_action_status', 'kc_action', 'iss'];\n        break;\n      case 'hybrid':\n        supportedParams = ['access_token', 'token_type', 'id_token', 'code', 'state', 'session_state', 'expires_in', 'kc_action_status', 'kc_action', 'iss'];\n        break;\n    }\n    supportedParams.push('error');\n    supportedParams.push('error_description');\n    supportedParams.push('error_uri');\n    const url = new URL(urlString);\n    let redirectUri = '';\n    let parsed;\n    if (this.responseMode === 'query' && url.searchParams.size > 0) {\n      parsed = this.#parseCallbackParams(url.search, supportedParams);\n      url.search = parsed.paramsString;\n      redirectUri = url.toString();\n    } else if (this.responseMode === 'fragment' && url.hash.length > 0) {\n      parsed = this.#parseCallbackParams(url.hash.substring(1), supportedParams);\n      url.hash = '';\n      redirectUri = url.toString();\n    }\n    if (parsed?.oauthParams) {\n      if (this.flow === 'standard' || this.flow === 'hybrid') {\n        if ((parsed.oauthParams.code || parsed.oauthParams.error) && parsed.oauthParams.state) {\n          parsed.oauthParams.redirectUri = redirectUri;\n          return parsed.oauthParams;\n        }\n      } else if (this.flow === 'implicit') {\n        if ((parsed.oauthParams.access_token || parsed.oauthParams.error) && parsed.oauthParams.state) {\n          parsed.oauthParams.redirectUri = redirectUri;\n          return parsed.oauthParams;\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef {Object} ParsedCallbackParams\n   * @property {string} paramsString\n   * @property {Record<string, string | undefined>} oauthParams\n   */\n\n  /**\n   * @param {string} paramsString\n   * @param {string[]} supportedParams\n   * @returns {ParsedCallbackParams}\n   */\n  #parseCallbackParams(paramsString, supportedParams) {\n    const params = new URLSearchParams(paramsString);\n    /** @type {Record<string, string>} */\n    const oauthParams = {};\n    for (const [key, value] of Array.from(params.entries())) {\n      if (supportedParams.includes(key)) {\n        oauthParams[key] = value;\n        params.delete(key);\n      }\n    }\n    return {\n      paramsString: params.toString(),\n      oauthParams\n    };\n  }\n  #processCallback(oauth) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        code,\n        error,\n        prompt\n      } = oauth;\n      let timeLocal = new Date().getTime();\n\n      /**\n       * @param {string} accessToken\n       * @param {string=} refreshToken\n       * @param {string=} idToken\n       */\n      const authSuccess = (accessToken, refreshToken, idToken) => {\n        timeLocal = (timeLocal + new Date().getTime()) / 2;\n        _this10.#setToken(accessToken, refreshToken, idToken, timeLocal);\n        if (_this10.#useNonce && _this10.idTokenParsed && _this10.idTokenParsed.nonce !== oauth.storedNonce) {\n          _this10.#logInfo('[KEYCLOAK] Invalid nonce, clearing token');\n          _this10.clearToken();\n          throw new Error('Invalid nonce.');\n        }\n      };\n      if (oauth.kc_action_status) {\n        _this10.onActionUpdate && _this10.onActionUpdate(oauth.kc_action_status, oauth.kc_action);\n      }\n      if (error) {\n        if (prompt !== 'none') {\n          if (oauth.error_description && oauth.error_description === 'authentication_expired') {\n            yield _this10.login(oauth.loginOptions);\n          } else {\n            const errorData = {\n              error,\n              error_description: oauth.error_description\n            };\n            _this10.onAuthError?.(errorData);\n            throw errorData;\n          }\n        }\n        return;\n      } else if (_this10.flow !== 'standard' && (oauth.access_token || oauth.id_token)) {\n        authSuccess(oauth.access_token, undefined, oauth.id_token);\n        _this10.onAuthSuccess?.();\n      }\n      if (_this10.flow !== 'implicit' && code) {\n        try {\n          const response = yield fetchAccessToken(_this10.endpoints.token(), code, /** @type {string} */_this10.clientId, oauth.redirectUri, oauth.pkceCodeVerifier);\n          authSuccess(response.access_token, response.refresh_token, response.id_token);\n          if (_this10.flow === 'standard') {\n            _this10.onAuthSuccess?.();\n          }\n          _this10.#scheduleCheckIframe();\n        } catch (error) {\n          _this10.onAuthError?.();\n          throw error;\n        }\n      }\n    })();\n  }\n  #scheduleCheckIframe() {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      if (_this11.#loginIframe.enable && _this11.token) {\n        yield waitForTimeout(_this11.#loginIframe.interval * 1000);\n        const unchanged = yield _this11.#checkLoginIframe();\n        if (unchanged) {\n          yield _this11.#scheduleCheckIframe();\n        }\n      }\n    })();\n  }\n\n  /**\n   * @param {KeycloakLoginOptions} [options]\n   * @returns {Promise<void>}\n   */\n  login(options) {\n    return this.#adapter.login(options);\n  }\n\n  /**\n   * @param {KeycloakLoginOptions} [options]\n   * @returns {Promise<string>}\n   */\n  createLoginUrl(options) {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      const state = createUUID();\n      const nonce = createUUID();\n      const redirectUri = _this12.#adapter.redirectUri(options);\n      /** @type {CallbackState} */\n      const callbackState = {\n        state,\n        nonce,\n        redirectUri,\n        loginOptions: options\n      };\n      if (options?.prompt) {\n        callbackState.prompt = options.prompt;\n      }\n      const url = options?.action === 'register' ? _this12.endpoints.register() : _this12.endpoints.authorize();\n      let scope = options?.scope || _this12.scope;\n      const scopeValues = scope ? scope.split(' ') : [];\n\n      // Ensure the 'openid' scope is always included.\n      if (!scopeValues.includes('openid')) {\n        scopeValues.unshift('openid');\n      }\n      scope = scopeValues.join(' ');\n      const params = new URLSearchParams([['client_id', /** @type {string} */_this12.clientId],\n      // The endpoint URI MUST NOT include a fragment component.\n      // https://datatracker.ietf.org/doc/html/rfc6749#section-3.1.2\n      ['redirect_uri', stripHash(redirectUri)], ['state', state], ['response_mode', _this12.responseMode], ['response_type', _this12.responseType], ['scope', scope]]);\n      if (_this12.#useNonce) {\n        params.append('nonce', nonce);\n      }\n      if (options?.prompt) {\n        params.append('prompt', options.prompt);\n      }\n      if (typeof options?.maxAge === 'number') {\n        params.append('max_age', options.maxAge.toString());\n      }\n      if (options?.loginHint) {\n        params.append('login_hint', options.loginHint);\n      }\n      if (options?.idpHint) {\n        params.append('kc_idp_hint', options.idpHint);\n      }\n      if (options?.action && options.action !== 'register') {\n        params.append('kc_action', options.action);\n      }\n      if (options?.locale) {\n        params.append('ui_locales', options.locale);\n      }\n      if (options?.acr) {\n        params.append('claims', buildClaimsParameter(options.acr));\n      }\n      if (options?.acrValues) {\n        params.append('acr_values', options.acrValues);\n      }\n      if (_this12.pkceMethod) {\n        try {\n          const codeVerifier = generateCodeVerifier(96);\n          const pkceChallenge = yield generatePkceChallenge(_this12.pkceMethod, codeVerifier);\n          callbackState.pkceCodeVerifier = codeVerifier;\n          params.append('code_challenge', pkceChallenge);\n          params.append('code_challenge_method', _this12.pkceMethod);\n        } catch (error) {\n          throw new Error('Failed to generate PKCE challenge.', {\n            cause: error\n          });\n        }\n      }\n      _this12.#callbackStorage.add(callbackState);\n      return `${url}?${params.toString()}`;\n    })();\n  }\n\n  /**\n   * @param {KeycloakLogoutOptions} [options]\n   * @returns {Promise<void>}\n   */\n  logout(options) {\n    return this.#adapter.logout(options);\n  }\n\n  /**\n   * @param {KeycloakLogoutOptions} [options]\n   * @returns {string}\n   */\n  createLogoutUrl(options) {\n    const logoutMethod = options?.logoutMethod ?? this.logoutMethod;\n    const url = this.endpoints.logout();\n    if (logoutMethod === 'POST') {\n      return url;\n    }\n    const params = new URLSearchParams([['client_id', /** @type {string} */this.clientId], ['post_logout_redirect_uri', this.#adapter.redirectUri(options)]]);\n    if (this.idToken) {\n      params.append('id_token_hint', this.idToken);\n    }\n    return `${url}?${params.toString()}`;\n  }\n\n  /**\n   * @param {KeycloakRegisterOptions} [options]\n   * @returns {Promise<void>}\n   */\n  register(options) {\n    return this.#adapter.register(options);\n  }\n\n  /**\n   * @param {KeycloakRegisterOptions} [options]\n   * @returns {Promise<string>}\n   */\n  createRegisterUrl(options) {\n    return this.createLoginUrl({\n      ...options,\n      action: 'register'\n    });\n  }\n\n  /**\n   * @param {KeycloakAccountOptions} [options]\n   * @returns {string}\n   */\n  createAccountUrl(options) {\n    const url = this.#getRealmUrl();\n    if (!url) {\n      throw new Error('Unable to create account URL, make sure the adapter is not configured using a generic OIDC provider.');\n    }\n    const params = new URLSearchParams([['referrer', /** @type {string} */this.clientId], ['referrer_uri', this.#adapter.redirectUri(options)]]);\n    return `${url}/account?${params.toString()}`;\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  accountManagement() {\n    return this.#adapter.accountManagement();\n  }\n\n  /**\n   * @param {string} role\n   * @returns {boolean}\n   */\n  hasRealmRole(role) {\n    const access = this.realmAccess;\n    return !!access && access.roles.indexOf(role) >= 0;\n  }\n\n  /**\n   * @param {string} role\n   * @param {string} [resource]\n   * @returns {boolean}\n   */\n  hasResourceRole(role, resource) {\n    if (!this.resourceAccess) {\n      return false;\n    }\n    const access = this.resourceAccess[resource || /** @type {string} */this.clientId];\n    return !!access && access.roles.indexOf(role) >= 0;\n  }\n\n  /**\n   * @returns {Promise<KeycloakProfile>}\n   */\n  loadUserProfile() {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      const realmUrl = _this13.#getRealmUrl();\n      if (!realmUrl) {\n        throw new Error('Unable to load user profile, make sure the adapter is not configured using a generic OIDC provider.');\n      }\n      const url = `${realmUrl}/account`;\n      /** @type {KeycloakProfile} */\n      const profile = yield fetchJSON(url, {\n        headers: [buildAuthorizationHeader(_this13.token)]\n      });\n      return _this13.profile = profile;\n    })();\n  }\n\n  /**\n   * @returns {Promise<{}>}\n   */\n  loadUserInfo() {\n    var _this14 = this;\n    return _asyncToGenerator(function* () {\n      const url = _this14.endpoints.userinfo();\n      /** @type {{}} */\n      const userInfo = yield fetchJSON(url, {\n        headers: [buildAuthorizationHeader(_this14.token)]\n      });\n      return _this14.userInfo = userInfo;\n    })();\n  }\n\n  /**\n   * @param {number} [minValidity]\n   * @returns {boolean}\n   */\n  isTokenExpired(minValidity) {\n    if (!this.tokenParsed || !this.refreshToken && this.flow !== 'implicit') {\n      throw new Error('Not authenticated');\n    }\n    if (this.timeSkew == null) {\n      this.#logInfo('[KEYCLOAK] Unable to determine if token is expired as timeskew is not set');\n      return true;\n    }\n    if (typeof this.tokenParsed.exp !== 'number') {\n      return false;\n    }\n    let expiresIn = this.tokenParsed.exp - Math.ceil(new Date().getTime() / 1000) + this.timeSkew;\n    if (minValidity) {\n      if (isNaN(minValidity)) {\n        throw new Error('Invalid minValidity');\n      }\n      expiresIn -= minValidity;\n    }\n    return expiresIn < 0;\n  }\n\n  /**\n   * @param {number} minValidity\n   * @returns {Promise<boolean>}\n   */\n  updateToken(minValidity) {\n    var _this15 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this15.refreshToken) {\n        throw new Error('Unable to update token, no refresh token available.');\n      }\n      minValidity = minValidity || 5;\n      if (_this15.#loginIframe.enable) {\n        yield _this15.#checkLoginIframe();\n      }\n      let refreshToken = false;\n      if (minValidity === -1) {\n        refreshToken = true;\n        _this15.#logInfo('[KEYCLOAK] Refreshing token: forced refresh');\n      } else if (!_this15.tokenParsed || _this15.isTokenExpired(minValidity)) {\n        refreshToken = true;\n        _this15.#logInfo('[KEYCLOAK] Refreshing token: token expired');\n      }\n      if (!refreshToken) {\n        return false;\n      }\n\n      /** @type {PromiseWithResolvers<boolean>} */\n      const {\n        promise,\n        resolve,\n        reject\n      } = Promise.withResolvers();\n      _this15.#refreshQueue.push({\n        resolve,\n        reject\n      });\n      if (_this15.#refreshQueue.length === 1) {\n        const url = _this15.endpoints.token();\n        let timeLocal = new Date().getTime();\n        try {\n          const response = yield fetchRefreshToken(url, _this15.refreshToken, /** @type {string} */_this15.clientId);\n          _this15.#logInfo('[KEYCLOAK] Token refreshed');\n          timeLocal = (timeLocal + new Date().getTime()) / 2;\n          _this15.#setToken(response.access_token, response.refresh_token, response.id_token, timeLocal);\n          _this15.onAuthRefreshSuccess?.();\n          for (let p = _this15.#refreshQueue.pop(); p != null; p = _this15.#refreshQueue.pop()) {\n            p.resolve(true);\n          }\n        } catch (error) {\n          _this15.#logWarn('[KEYCLOAK] Failed to refresh token');\n          if (error instanceof NetworkError && error.response.status === 400) {\n            _this15.clearToken();\n          }\n          _this15.onAuthRefreshError?.();\n          for (let p = _this15.#refreshQueue.pop(); p != null; p = _this15.#refreshQueue.pop()) {\n            p.reject(error);\n          }\n        }\n      }\n      return yield promise;\n    })();\n  }\n  clearToken() {\n    if (this.token) {\n      this.#setToken();\n      this.onAuthLogout?.();\n      if (this.loginRequired) {\n        this.login();\n      }\n    }\n  }\n\n  /**\n   * @param {string} [token]\n   * @param {string} [refreshToken]\n   * @param {string} [idToken]\n   * @param {number} [timeLocal]\n   */\n  #setToken(token, refreshToken, idToken, timeLocal) {\n    if (this.tokenTimeoutHandle) {\n      clearTimeout(this.tokenTimeoutHandle);\n      this.tokenTimeoutHandle = undefined;\n    }\n    if (refreshToken) {\n      this.refreshToken = refreshToken;\n      this.refreshTokenParsed = decodeToken(refreshToken);\n    } else {\n      delete this.refreshToken;\n      delete this.refreshTokenParsed;\n    }\n    if (idToken) {\n      this.idToken = idToken;\n      this.idTokenParsed = decodeToken(idToken);\n    } else {\n      delete this.idToken;\n      delete this.idTokenParsed;\n    }\n    if (token) {\n      this.token = token;\n      this.tokenParsed = decodeToken(token);\n      this.sessionId = this.tokenParsed.sid;\n      this.authenticated = true;\n      this.subject = this.tokenParsed.sub;\n      this.realmAccess = this.tokenParsed.realm_access;\n      this.resourceAccess = this.tokenParsed.resource_access;\n      if (timeLocal) {\n        this.timeSkew = Math.floor(timeLocal / 1000) - this.tokenParsed.iat;\n      }\n      if (this.timeSkew !== null) {\n        this.#logInfo('[KEYCLOAK] Estimated time difference between browser and server is ' + this.timeSkew + ' seconds');\n        if (this.onTokenExpired) {\n          const expiresIn = (this.tokenParsed.exp - new Date().getTime() / 1000 + this.timeSkew) * 1000;\n          this.#logInfo('[KEYCLOAK] Token expires in ' + Math.round(expiresIn / 1000) + ' s');\n          if (expiresIn <= 0) {\n            this.onTokenExpired();\n          } else {\n            this.tokenTimeoutHandle = window.setTimeout(this.onTokenExpired, expiresIn);\n          }\n        }\n      }\n    } else {\n      delete this.token;\n      delete this.tokenParsed;\n      delete this.subject;\n      delete this.realmAccess;\n      delete this.resourceAccess;\n      this.authenticated = false;\n    }\n  }\n\n  /**\n   * @returns {string=}\n   */\n  #getRealmUrl() {\n    if (typeof this.authServerUrl === 'undefined') {\n      return;\n    }\n    return `${stripTrailingSlash(this.authServerUrl)}/realms/${encodeURIComponent( /** @type {string} */this.realm)}`;\n  }\n\n  /**\n   * @param {Function} fn\n   * @returns {(message: string) => void}\n   */\n  #createLogger(fn) {\n    return message => {\n      if (this.enableLogging) {\n        fn.call(console, message);\n      }\n    };\n  }\n}\n\n/**\n * @returns {string}\n */\nfunction createUUID() {\n  if (typeof crypto === 'undefined' || typeof crypto.randomUUID === 'undefined') {\n    throw new Error('Web Crypto API is not available.');\n  }\n  return crypto.randomUUID();\n}\n\n/**\n * @param {Acr} requestedAcr\n * @returns {string}\n */\nfunction buildClaimsParameter(requestedAcr) {\n  return JSON.stringify({\n    id_token: {\n      acr: requestedAcr\n    }\n  });\n}\n\n/**\n * @param {number} len\n * @returns {string}\n */\nfunction generateCodeVerifier(len) {\n  return generateRandomString(len, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789');\n}\n\n/**\n * @param {string} pkceMethod\n * @param {string} codeVerifier\n * @returns {Promise<string>}\n */\nfunction generatePkceChallenge(_x15, _x16) {\n  return _generatePkceChallenge.apply(this, arguments);\n}\n/**\n * @param {number} len\n * @param {string} alphabet\n * @returns {string}\n */\nfunction _generatePkceChallenge() {\n  _generatePkceChallenge = _asyncToGenerator(function* (pkceMethod, codeVerifier) {\n    if (pkceMethod !== 'S256') {\n      throw new TypeError(`Invalid value for 'pkceMethod', expected 'S256' but got '${pkceMethod}'.`);\n    }\n\n    // hash codeVerifier, then encode as url-safe base64 without padding\n    const hashBytes = new Uint8Array(yield sha256Digest(codeVerifier));\n    const encodedHash = bytesToBase64(hashBytes).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n    return encodedHash;\n  });\n  return _generatePkceChallenge.apply(this, arguments);\n}\nfunction generateRandomString(len, alphabet) {\n  const randomData = generateRandomData(len);\n  const chars = new Array(len);\n  for (let i = 0; i < len; i++) {\n    chars[i] = alphabet.charCodeAt(randomData[i] % alphabet.length);\n  }\n  return String.fromCharCode.apply(null, chars);\n}\n\n/**\n * @param {number} len\n * @returns {Uint8Array<ArrayBuffer>}\n */\nfunction generateRandomData(len) {\n  if (typeof crypto === 'undefined' || typeof crypto.getRandomValues === 'undefined') {\n    throw new Error('Web Crypto API is not available.');\n  }\n  return crypto.getRandomValues(new Uint8Array(len));\n}\n\n/**\n * Function to extend existing native Promise with timeout\n *\n * @template T\n * @param {Promise<T>} promise\n * @param {number} timeout\n * @param {string} errorMessage\n * @returns {Promise<T>}\n */\nfunction applyTimeoutToPromise(promise, timeout, errorMessage) {\n  /** @type {number} */\n  let timeoutHandle;\n  const timeoutPromise = new Promise(function (resolve, reject) {\n    timeoutHandle = window.setTimeout(function () {\n      reject(new Error(errorMessage || 'Promise is not settled within timeout of ' + timeout + 'ms'));\n    }, timeout);\n  });\n  return Promise.race([promise, timeoutPromise]).finally(function () {\n    clearTimeout(timeoutHandle);\n  });\n}\n\n/**\n * @returns {CallbackStorage}\n */\nfunction createCallbackStorage() {\n  try {\n    return new LocalStorage();\n  } catch (err) {\n    return new CookieStorage();\n  }\n}\nconst STORAGE_KEY_PREFIX = 'kc-callback-';\n\n/**\n * @typedef {Object} CallbackState\n * @property {string} state\n * @property {string} nonce\n * @property {string} redirectUri\n * @property {KeycloakLoginOptions} [loginOptions]\n * @property {KeycloakLoginOptions['prompt']} [prompt]\n * @property {string} [pkceCodeVerifier]\n */\n\n/**\n * @typedef {Object} CallbackStorage\n * @property {(state?: string) => CallbackState | null} get\n * @property {(state: CallbackState) => void} add\n */\n\n/**\n * @implements {CallbackStorage}\n */\nclass LocalStorage {\n  constructor() {\n    globalThis.localStorage.setItem('kc-test', 'test');\n    globalThis.localStorage.removeItem('kc-test');\n  }\n\n  /**\n   * @param {string} [state]\n   * @returns {CallbackState | null}\n   */\n  get(state) {\n    if (!state) {\n      return null;\n    }\n    this.#clearInvalidValues();\n    const key = STORAGE_KEY_PREFIX + state;\n    const value = globalThis.localStorage.getItem(key);\n    if (value) {\n      globalThis.localStorage.removeItem(key);\n      return JSON.parse(value);\n    }\n    return null;\n  }\n  /**\n   * @param {CallbackState} state\n   */\n  add(state) {\n    this.#clearInvalidValues();\n    const key = STORAGE_KEY_PREFIX + state.state;\n    const value = JSON.stringify({\n      ...state,\n      // Set the expiry time to 1 hour from now.\n      expires: Date.now() + 60 * 60 * 1000\n    });\n    try {\n      globalThis.localStorage.setItem(key, value);\n    } catch (error) {\n      // If the storage is full, clear all known values and try again.\n      this.#clearAllValues();\n      globalThis.localStorage.setItem(key, value);\n    }\n  }\n  /**\n   * Clears all values from local storage that are no longer valid.\n   */\n  #clearInvalidValues() {\n    const currentTime = Date.now();\n    for (const [key, value] of this.#getStoredEntries()) {\n      // Attempt to parse the expiry time from the value.\n      const expiry = this.#parseExpiry(value);\n\n      // Discard the value if it is malformed or expired.\n      if (expiry === null || expiry < currentTime) {\n        globalThis.localStorage.removeItem(key);\n      }\n    }\n  }\n\n  /**\n   * Clears all known values from local storage.\n   */\n  #clearAllValues() {\n    for (const [key] of this.#getStoredEntries()) {\n      globalThis.localStorage.removeItem(key);\n    }\n  }\n\n  /**\n   * Gets all entries stored in local storage that are known to be managed by this class.\n   * @returns {[string, string][]} An array of key-value pairs.\n   */\n  #getStoredEntries() {\n    return Object.entries(globalThis.localStorage).filter(([key]) => key.startsWith(STORAGE_KEY_PREFIX));\n  }\n\n  /**\n   * Parses the expiry time from a value stored in local storage.\n   * @param {string} value\n   * @returns {number | null} The expiry time in milliseconds, or `null` if the value is malformed.\n   */\n  #parseExpiry(value) {\n    let parsedValue;\n\n    // Attempt to parse the value as JSON.\n    try {\n      parsedValue = JSON.parse(value);\n    } catch (error) {\n      return null;\n    }\n\n    // Attempt to extract the 'expires' property.\n    if (isObject(parsedValue) && 'expires' in parsedValue && typeof parsedValue.expires === 'number') {\n      return parsedValue.expires;\n    }\n    return null;\n  }\n}\n\n/**\n * @implements {CallbackStorage}\n */\nclass CookieStorage {\n  /**\n   * @param {string} [state]\n   * @returns {CallbackState | null}\n   */\n  get(state) {\n    if (!state) {\n      return null;\n    }\n    const value = this.#getCookie(STORAGE_KEY_PREFIX + state);\n    this.#setCookie(STORAGE_KEY_PREFIX + state, '', this.#cookieExpiration(-100));\n    if (value) {\n      return JSON.parse(value);\n    }\n    return null;\n  }\n\n  /**\n   * @param {CallbackState} state\n   */\n  add(state) {\n    this.#setCookie(STORAGE_KEY_PREFIX + state.state, JSON.stringify(state), this.#cookieExpiration(60));\n  }\n\n  /**\n   * @param {string} key\n   * @returns\n   */\n  #getCookie(key) {\n    const name = key + '=';\n    const ca = document.cookie.split(';');\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return '';\n  }\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   * @param {Date} expirationDate\n   */\n  #setCookie(key, value, expirationDate) {\n    const cookie = key + '=' + value + '; ' + 'expires=' + expirationDate.toUTCString() + '; ';\n    document.cookie = cookie;\n  }\n\n  /**\n   * @param {number} minutes\n   * @returns {Date}\n   */\n  #cookieExpiration(minutes) {\n    const exp = new Date();\n    exp.setTime(exp.getTime() + minutes * 60 * 1000);\n    return exp;\n  }\n}\n\n/**\n * @param {Uint8Array<ArrayBuffer>} bytes\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n */\nfunction bytesToBase64(bytes) {\n  const binString = String.fromCodePoint(...bytes);\n  return btoa(binString);\n}\n\n/**\n * @param {string} message\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#basic_example\n */\nfunction sha256Digest(_x17) {\n  return _sha256Digest.apply(this, arguments);\n}\n/**\n * @param {string} token\n * @returns {KeycloakTokenParsed}\n */\nfunction _sha256Digest() {\n  _sha256Digest = _asyncToGenerator(function* (message) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(message);\n    if (typeof crypto === 'undefined' || typeof crypto.subtle === 'undefined') {\n      throw new Error('Web Crypto API is not available.');\n    }\n    return yield crypto.subtle.digest('SHA-256', data);\n  });\n  return _sha256Digest.apply(this, arguments);\n}\nfunction decodeToken(token) {\n  const [, payload] = token.split('.');\n  if (typeof payload !== 'string') {\n    throw new Error('Unable to decode token, payload not found.');\n  }\n  let decoded;\n  try {\n    decoded = base64UrlDecode(payload);\n  } catch (error) {\n    throw new Error('Unable to decode token, payload is not a valid Base64URL value.', {\n      cause: error\n    });\n  }\n  try {\n    return JSON.parse(decoded);\n  } catch (error) {\n    throw new Error('Unable to decode token, payload is not a valid JSON value.', {\n      cause: error\n    });\n  }\n}\n\n/**\n * @param {string} input\n */\nfunction base64UrlDecode(input) {\n  let output = input.replaceAll('-', '+').replaceAll('_', '/');\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += '==';\n      break;\n    case 3:\n      output += '=';\n      break;\n    default:\n      throw new Error('Input is not of the correct length.');\n  }\n  try {\n    return b64DecodeUnicode(output);\n  } catch (error) {\n    return atob(output);\n  }\n}\n\n/**\n * @param {string} input\n */\nfunction b64DecodeUnicode(input) {\n  return decodeURIComponent(atob(input).replace(/(.)/g, (m, p) => {\n    let code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\n/**\n * Check if the input is an object that can be operated on.\n * @param {unknown} input\n */\nfunction isObject(input) {\n  return typeof input === 'object' && input !== null;\n}\n\n/**\n * @typedef {Object} JsonConfig The JSON version of the adapter configuration.\n * @property {string} auth-server-url The URL of the authentication server.\n * @property {string} realm The name of the realm.\n * @property {string} resource The name of the resource, usually the client ID.\n */\n\n/**\n * Fetch the adapter configuration from the given URL.\n * @param {string} url\n * @returns {Promise<JsonConfig>}\n */\nfunction fetchJsonConfig(_x18) {\n  return _fetchJsonConfig.apply(this, arguments);\n}\n/**\n * Fetch the OpenID configuration from the given URL.\n * @param {string} url\n * @returns {Promise<OpenIdProviderMetadata>}\n */\nfunction _fetchJsonConfig() {\n  _fetchJsonConfig = _asyncToGenerator(function* (url) {\n    return yield fetchJSON(url);\n  });\n  return _fetchJsonConfig.apply(this, arguments);\n}\nfunction fetchOpenIdConfig(_x19) {\n  return _fetchOpenIdConfig.apply(this, arguments);\n}\n/**\n * @typedef {Object} AccessTokenResponse The successful token response from the authorization server, based on the {@link https://datatracker.ietf.org/doc/html/rfc6749#section-5.1 OAuth 2.0 Authorization Framework specification}.\n * @property {string} access_token The access token issued by the authorization server.\n * @property {string} token_type The type of the token issued by the authorization server.\n * @property {number} [expires_in] The lifetime in seconds of the access token.\n * @property {string} [refresh_token] The refresh token issued by the authorization server.\n * @property {string} [id_token] The ID token issued by the authorization server, if requested.\n * @property {string} [scope] The scope of the access token.\n */\n/**\n * Fetch the access token from the given URL.\n * @param {string} url\n * @param {string} code\n * @param {string} clientId\n * @param {string} redirectUri\n * @param {string} [pkceCodeVerifier]\n * @returns {Promise<AccessTokenResponse>}\n */\nfunction _fetchOpenIdConfig() {\n  _fetchOpenIdConfig = _asyncToGenerator(function* (url) {\n    return yield fetchJSON(url);\n  });\n  return _fetchOpenIdConfig.apply(this, arguments);\n}\nfunction fetchAccessToken(_x20, _x21, _x22, _x23, _x24) {\n  return _fetchAccessToken.apply(this, arguments);\n}\n/**\n * Fetch the refresh token from the given URL.\n * @param {string} url\n * @param {string} refreshToken\n * @param {string} clientId\n * @returns {Promise<AccessTokenResponse>}\n */\nfunction _fetchAccessToken() {\n  _fetchAccessToken = _asyncToGenerator(function* (url, code, clientId, redirectUri, pkceCodeVerifier) {\n    const body = new URLSearchParams([['code', code], ['grant_type', 'authorization_code'], ['client_id', clientId], ['redirect_uri', stripHash(redirectUri)]]);\n    if (pkceCodeVerifier) {\n      body.append('code_verifier', pkceCodeVerifier);\n    }\n    return yield fetchJSON(url, {\n      method: 'POST',\n      credentials: 'include',\n      body\n    });\n  });\n  return _fetchAccessToken.apply(this, arguments);\n}\nfunction fetchRefreshToken(_x25, _x26, _x27) {\n  return _fetchRefreshToken.apply(this, arguments);\n}\n/**\n * @template [T=unknown]\n * @param {string} url\n * @param {RequestInit} init\n * @returns {Promise<T>}\n */\nfunction _fetchRefreshToken() {\n  _fetchRefreshToken = _asyncToGenerator(function* (url, refreshToken, clientId) {\n    const body = new URLSearchParams([['grant_type', 'refresh_token'], ['refresh_token', refreshToken], ['client_id', clientId]]);\n    return yield fetchJSON(url, {\n      method: 'POST',\n      credentials: 'include',\n      body\n    });\n  });\n  return _fetchRefreshToken.apply(this, arguments);\n}\nfunction fetchJSON(_x28) {\n  return _fetchJSON.apply(this, arguments);\n}\n/**\n * @param {string} url\n * @param {RequestInit} [init]\n * @returns {Promise<Response>}\n */\nfunction _fetchJSON() {\n  _fetchJSON = _asyncToGenerator(function* (url, init = {}) {\n    const headers = new Headers(init.headers);\n    headers.set('Accept', CONTENT_TYPE_JSON);\n    const response = yield fetchWithErrorHandling(url, {\n      ...init,\n      headers\n    });\n    return yield response.json();\n  });\n  return _fetchJSON.apply(this, arguments);\n}\nfunction fetchWithErrorHandling(_x29, _x30) {\n  return _fetchWithErrorHandling.apply(this, arguments);\n}\n/**\n * @param {string} [token]\n * @returns {[string, string]}\n */\nfunction _fetchWithErrorHandling() {\n  _fetchWithErrorHandling = _asyncToGenerator(function* (url, init) {\n    const response = yield fetch(url, init);\n    if (!response.ok) {\n      throw new NetworkError('Server responded with an invalid status.', {\n        response\n      });\n    }\n    return response;\n  });\n  return _fetchWithErrorHandling.apply(this, arguments);\n}\nfunction buildAuthorizationHeader(token) {\n  if (!token) {\n    throw new Error('Unable to build authorization header, token is not set, make sure the user is authenticated.');\n  }\n  return ['Authorization', `bearer ${token}`];\n}\n\n/**\n * @param {string} url\n * @returns {string}\n */\nfunction stripTrailingSlash(url) {\n  return url.endsWith('/') ? url.slice(0, -1) : url;\n}\n\n/**\n * @param {string} url\n * @returns {string}\n */\nfunction stripHash(url) {\n  const parsedUrl = new URL(url);\n  parsedUrl.hash = '';\n  return parsedUrl.toString();\n}\n\n/**\n * @typedef {Object} NetworkErrorOptionsProperties\n * @property {Response} response\n * @typedef {ErrorOptions & NetworkErrorOptionsProperties} NetworkErrorOptions\n */\n\nexport class NetworkError extends Error {\n  /** @type {Response} */\n  response;\n\n  /**\n   * @param {string} message\n   * @param {NetworkErrorOptions} options\n   */\n  constructor(message, options) {\n    super(message, options);\n    this.response = options.response;\n  }\n}\n\n/**\n * @param {number} delay\n * @returns {Promise<void>}\n */\nconst waitForTimeout = delay => new Promise(resolve => setTimeout(resolve, delay));","map":{"version":3,"names":["CONTENT_TYPE_JSON","Keycloak","refreshQueue","adapter","useNonce","callbackStorage","logInfo","createLogger","console","info","logWarn","warn","loginIframe","enable","callbackList","interval","config","didInitialize","authenticated","loginRequired","responseMode","responseType","flow","timeSkew","redirectUri","silentCheckSsoRedirectUri","silentCheckSsoFallback","pkceMethod","enableLogging","logoutMethod","scope","messageReceiveTimeout","idToken","idTokenParsed","token","tokenParsed","refreshToken","refreshTokenParsed","clientId","sessionId","subject","authServerUrl","realm","realmAccess","resourceAccess","profile","userInfo","endpoints","tokenTimeoutHandle","onAuthSuccess","onAuthError","onAuthRefreshSuccess","onAuthRefreshError","onTokenExpired","onAuthLogout","onReady","onActionUpdate","constructor","isObject","Error","requiredProperties","property","globalThis","isSecureContext","init","initOptions","createCallbackStorage","adapters","includes","loadAdapter","window","checkLoginIframe","checkLoginIframeInterval","onLoad","TypeError","loadConfig","check3pCookiesSupported","processInit","type","loadDefaultAdapter","loadCordovaAdapter","loadCordovaNativeAdapter","options","location","href","login","assign","createLoginUrl","Promise","logout","replace","createLogoutUrl","form","document","createElement","setAttribute","style","display","data","id_token_hint","client_id","post_logout_redirect_uri","name","value","Object","entries","input","appendChild","body","submit","register","createRegisterUrl","accountManagement","accountUrl","createAccountUrl","cordovaOpenWindowWrapper","loginUrl","target","cordova","InAppBrowser","open","shallowCloneCordovaOptions","userOptions","cordovaOptions","keys","reduce","optionName","formatCordovaOptions","push","join","createCordovaOptions","prompt","hidden","getCordovaRedirectUri","ref","completed","closed","closeBrowser","close","resolve","reject","addEventListener","event","url","indexOf","callback","parseCallback","processCallback","error","logoutUrl","clearToken","registerUrl","promise","oauth","universalLinks","subscribe","unsubscribe","plugins","browsertab","openUrl","jsonConfig","fetchJsonConfig","resource","setupEndpoints","loadOidcConfig","oidcProvider","authorize","getRealmUrl","checkSessionIframe","thirdPartyCookiesIframe","userinfo","stripTrailingSlash","openIdConfig","fetchOpenIdConfig","setupOidcEndpoints","authorization_endpoint","token_endpoint","end_session_endpoint","check_session_iframe","userinfo_endpoint","iframe","messageCallback","contentWindow","source","undefined","removeChild","removeEventListener","applyTimeoutToPromise","history","replaceState","state","valid","setupCheckLoginIframe","doLogin","locale","unchanged","checkSsoSilently","setToken","scheduleCheckIframe","updateToken","origin","iframeOrigin","callbacks","reverse","authUrl","startsWith","URL","message","result","length","postMessage","src","parseCallbackUrl","oauthState","get","storedNonce","nonce","pkceCodeVerifier","loginOptions","urlString","supportedParams","parsed","searchParams","size","parseCallbackParams","search","paramsString","toString","hash","substring","oauthParams","code","access_token","params","URLSearchParams","key","Array","from","delete","timeLocal","Date","getTime","authSuccess","accessToken","kc_action_status","kc_action","error_description","errorData","id_token","response","fetchAccessToken","refresh_token","waitForTimeout","createUUID","callbackState","action","scopeValues","split","unshift","stripHash","append","maxAge","loginHint","idpHint","acr","buildClaimsParameter","acrValues","codeVerifier","generateCodeVerifier","pkceChallenge","generatePkceChallenge","cause","add","hasRealmRole","role","access","roles","hasResourceRole","loadUserProfile","realmUrl","fetchJSON","headers","buildAuthorizationHeader","loadUserInfo","isTokenExpired","minValidity","exp","expiresIn","Math","ceil","isNaN","withResolvers","fetchRefreshToken","p","pop","NetworkError","status","clearTimeout","decodeToken","sid","sub","realm_access","resource_access","floor","iat","round","setTimeout","encodeURIComponent","fn","call","crypto","randomUUID","requestedAcr","JSON","stringify","len","generateRandomString","hashBytes","Uint8Array","sha256Digest","encodedHash","bytesToBase64","alphabet","randomData","generateRandomData","chars","i","charCodeAt","String","fromCharCode","apply","getRandomValues","timeout","errorMessage","timeoutHandle","timeoutPromise","race","finally","LocalStorage","err","CookieStorage","STORAGE_KEY_PREFIX","localStorage","setItem","removeItem","clearInvalidValues","getItem","parse","expires","now","clearAllValues","currentTime","getStoredEntries","expiry","parseExpiry","filter","parsedValue","getCookie","setCookie","cookieExpiration","ca","cookie","c","charAt","expirationDate","toUTCString","minutes","setTime","bytes","binString","fromCodePoint","btoa","encoder","TextEncoder","encode","subtle","digest","payload","decoded","base64UrlDecode","output","replaceAll","b64DecodeUnicode","atob","decodeURIComponent","m","toUpperCase","method","credentials","Headers","set","fetchWithErrorHandling","json","fetch","ok","endsWith","slice","parsedUrl","delay"],"sources":["C:/DevTools/Projects/UNIFOR/Desafio-UNIFOR-Hexagonal-Quarkus-Angular/frontend/unifor-frontend/node_modules/keycloak-js/lib/keycloak.js"],"sourcesContent":["// @ts-check\n/**\n * @import {Acr, KeycloakAccountOptions, KeycloakAdapter, KeycloakConfig, KeycloakError, KeycloakFlow, KeycloakInitOptions, KeycloakLoginOptions, KeycloakLogoutOptions, KeycloakPkceMethod, KeycloakProfile, KeycloakRegisterOptions, KeycloakResourceAccess, KeycloakResponseMode, KeycloakResponseType, KeycloakRoles, KeycloakTokenParsed, OpenIdProviderMetadata} from \"./keycloak.ts\"\n */\n/*\n * Copyright 2016 Red Hat, Inc. and/or its affiliates\n * and other contributors as indicated by the @author tags.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CONTENT_TYPE_JSON = 'application/json'\n\n/**\n * @typedef {Object} Endpoints\n * @property {() => string} authorize\n * @property {() => string} token\n * @property {() => string} logout\n * @property {() => string} checkSessionIframe\n * @property {() => string=} thirdPartyCookiesIframe\n * @property {() => string} register\n * @property {() => string} userinfo\n */\n\n/**\n * @typedef {Object} LoginIframe\n * @property {boolean} enable\n * @property {((error: Error | null, value?: boolean) => void)[]} callbackList\n * @property {number} interval\n * @property {HTMLIFrameElement=} iframe\n * @property {string=} iframeOrigin\n */\n\nexport default class Keycloak {\n  /** @type {Pick<PromiseWithResolvers<boolean>, 'resolve' | 'reject'>[]} */\n  #refreshQueue = []\n  /** @type {KeycloakAdapter} */\n  #adapter\n  /** @type {boolean} */\n  #useNonce = true\n  /** @type {CallbackStorage} */\n  #callbackStorage\n  #logInfo = this.#createLogger(console.info)\n  #logWarn = this.#createLogger(console.warn)\n  /** @type {LoginIframe} */\n  #loginIframe = {\n    enable: true,\n    callbackList: [],\n    interval: 5\n  }\n\n  /** @type {KeycloakConfig} config */\n  #config\n  didInitialize = false\n  authenticated = false\n  loginRequired = false\n  /** @type {KeycloakResponseMode} */\n  responseMode = 'fragment'\n  /** @type {KeycloakResponseType} */\n  responseType = 'code'\n  /** @type {KeycloakFlow} */\n  flow = 'standard'\n  /** @type {number?} */\n  timeSkew = null\n  /** @type {string=} */\n  redirectUri\n  /** @type {string=} */\n  silentCheckSsoRedirectUri\n  /** @type {boolean} */\n  silentCheckSsoFallback = true\n  /** @type {KeycloakPkceMethod} */\n  pkceMethod = 'S256'\n  enableLogging = false\n  /** @type {'GET' | 'POST'} */\n  logoutMethod = 'GET'\n  /** @type {string=} */\n  scope\n  messageReceiveTimeout = 10000\n  /** @type {string=} */\n  idToken\n  /** @type {KeycloakTokenParsed=} */\n  idTokenParsed\n  /** @type {string=} */\n  token\n  /** @type {KeycloakTokenParsed=} */\n  tokenParsed\n  /** @type {string=} */\n  refreshToken\n  /** @type {KeycloakTokenParsed=} */\n  refreshTokenParsed\n  /** @type {string=} */\n  clientId\n  /** @type {string=} */\n  sessionId\n  /** @type {string=} */\n  subject\n  /** @type {string=} */\n  authServerUrl\n  /** @type {string=} */\n  realm\n  /** @type {KeycloakRoles=} */\n  realmAccess\n  /** @type {KeycloakResourceAccess=} */\n  resourceAccess\n  /** @type {KeycloakProfile=} */\n  profile\n  /** @type {{}=} */\n  userInfo\n  /** @type {Endpoints} */\n  endpoints\n  /** @type {number=} */\n  tokenTimeoutHandle\n  /** @type {() => void=} */\n  onAuthSuccess\n  /** @type {(errorData?: KeycloakError) => void=} */\n  onAuthError\n  /** @type {() => void=} */\n  onAuthRefreshSuccess\n  /** @type {() => void=} */\n  onAuthRefreshError\n  /** @type {() => void=} */\n  onTokenExpired\n  /** @type {() => void=} */\n  onAuthLogout\n  /** @type {(authenticated: boolean) => void=} */\n  onReady\n  /** @type {(status: 'success' | 'cancelled' | 'error', action: string) => void=} */\n  onActionUpdate\n\n  /**\n   * @param {KeycloakConfig} config\n   */\n  constructor (config) {\n    if (typeof config !== 'string' && !isObject(config)) {\n      throw new Error(\"The 'Keycloak' constructor must be provided with a configuration object, or a URL to a JSON configuration file.\")\n    }\n\n    if (isObject(config)) {\n      const requiredProperties = 'oidcProvider' in config\n        ? ['clientId']\n        : ['url', 'realm', 'clientId']\n\n      for (const property of requiredProperties) {\n        if (!(property in config)) {\n          throw new Error(`The configuration object is missing the required '${property}' property.`)\n        }\n      }\n    }\n\n    if (!globalThis.isSecureContext) {\n      this.#logWarn(\n        \"[KEYCLOAK] Keycloak JS must be used in a 'secure context' to function properly as it relies on browser APIs that are otherwise not available.\\n\" +\n                'Continuing to run your application insecurely will lead to unexpected behavior and breakage.\\n\\n' +\n                'For more information see: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts'\n      )\n    }\n\n    this.#config = config\n  }\n\n  /**\n   * @param {KeycloakInitOptions} initOptions\n   * @returns {Promise<boolean>}\n   */\n  async init (initOptions = {}) {\n    if (this.didInitialize) {\n      throw new Error(\"A 'Keycloak' instance can only be initialized once.\")\n    }\n\n    this.didInitialize = true\n    this.#callbackStorage = createCallbackStorage()\n\n    const adapters = ['default', 'cordova', 'cordova-native']\n\n    if (typeof initOptions.adapter === 'string' && adapters.includes(initOptions.adapter)) {\n      this.#adapter = this.#loadAdapter(initOptions.adapter)\n    } else if (typeof initOptions.adapter === 'object') {\n      this.#adapter = initOptions.adapter\n    } else if ('Cordova' in window || 'cordova' in window) {\n      this.#adapter = this.#loadAdapter('cordova')\n    } else {\n      this.#adapter = this.#loadAdapter('default')\n    }\n\n    if (typeof initOptions.useNonce !== 'undefined') {\n      this.#useNonce = initOptions.useNonce\n    }\n\n    if (typeof initOptions.checkLoginIframe !== 'undefined') {\n      this.#loginIframe.enable = initOptions.checkLoginIframe\n    }\n\n    if (initOptions.checkLoginIframeInterval) {\n      this.#loginIframe.interval = initOptions.checkLoginIframeInterval\n    }\n\n    if (initOptions.onLoad === 'login-required') {\n      this.loginRequired = true\n    }\n\n    if (initOptions.responseMode) {\n      if (initOptions.responseMode === 'query' || initOptions.responseMode === 'fragment') {\n        this.responseMode = initOptions.responseMode\n      } else {\n        throw new Error('Invalid value for responseMode')\n      }\n    }\n\n    if (initOptions.flow) {\n      switch (initOptions.flow) {\n        case 'standard':\n          this.responseType = 'code'\n          break\n        case 'implicit':\n          this.responseType = 'id_token token'\n          break\n        case 'hybrid':\n          this.responseType = 'code id_token token'\n          break\n        default:\n          throw new Error('Invalid value for flow')\n      }\n      this.flow = initOptions.flow\n    }\n\n    if (typeof initOptions.timeSkew === 'number') {\n      this.timeSkew = initOptions.timeSkew\n    }\n\n    if (initOptions.redirectUri) {\n      this.redirectUri = initOptions.redirectUri\n    }\n\n    if (initOptions.silentCheckSsoRedirectUri) {\n      this.silentCheckSsoRedirectUri = initOptions.silentCheckSsoRedirectUri\n    }\n\n    if (typeof initOptions.silentCheckSsoFallback === 'boolean') {\n      this.silentCheckSsoFallback = initOptions.silentCheckSsoFallback\n    }\n\n    if (typeof initOptions.pkceMethod !== 'undefined') {\n      if (initOptions.pkceMethod !== 'S256' && initOptions.pkceMethod !== false) {\n        throw new TypeError(`Invalid value for pkceMethod', expected 'S256' or false but got ${initOptions.pkceMethod}.`)\n      }\n\n      this.pkceMethod = initOptions.pkceMethod\n    }\n\n    if (typeof initOptions.enableLogging === 'boolean') {\n      this.enableLogging = initOptions.enableLogging\n    }\n\n    if (initOptions.logoutMethod === 'POST') {\n      this.logoutMethod = 'POST'\n    }\n\n    if (typeof initOptions.scope === 'string') {\n      this.scope = initOptions.scope\n    }\n\n    if (typeof initOptions.messageReceiveTimeout === 'number' && initOptions.messageReceiveTimeout > 0) {\n      this.messageReceiveTimeout = initOptions.messageReceiveTimeout\n    }\n\n    await this.#loadConfig()\n    await this.#check3pCookiesSupported()\n    await this.#processInit(initOptions)\n\n    this.onReady?.(this.authenticated)\n\n    return this.authenticated\n  }\n\n  /**\n   * @param {\"default\" | \"cordova\" | \"cordova-native\"} type\n   * @returns {KeycloakAdapter}\n   */\n  #loadAdapter (type) {\n    if (type === 'default') {\n      return this.#loadDefaultAdapter()\n    }\n\n    if (type === 'cordova') {\n      this.#loginIframe.enable = false\n      return this.#loadCordovaAdapter()\n    }\n\n    if (type === 'cordova-native') {\n      this.#loginIframe.enable = false\n      return this.#loadCordovaNativeAdapter()\n    }\n\n    throw new Error('invalid adapter type: ' + type)\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadDefaultAdapter () {\n    /** @type {KeycloakAdapter['redirectUri']}{} */\n    const redirectUri = (options) => {\n      return options?.redirectUri || this.redirectUri || globalThis.location.href\n    }\n\n    return {\n      login: async (options) => {\n        window.location.assign(await this.createLoginUrl(options))\n        return await new Promise(() => {})\n      },\n\n      logout: async (options) => {\n        const logoutMethod = options?.logoutMethod ?? this.logoutMethod\n\n        if (logoutMethod === 'GET') {\n          window.location.replace(this.createLogoutUrl(options))\n          return\n        }\n\n        // Create form to send POST request.\n        const form = document.createElement('form')\n\n        form.setAttribute('method', 'POST')\n        form.setAttribute('action', this.createLogoutUrl(options))\n        form.style.display = 'none'\n\n        // Add data to form as hidden input fields.\n        const data = {\n          id_token_hint: this.idToken,\n          client_id: this.clientId,\n          post_logout_redirect_uri: redirectUri(options)\n        }\n\n        for (const [name, value] of Object.entries(data)) {\n          const input = document.createElement('input')\n\n          input.setAttribute('type', 'hidden')\n          input.setAttribute('name', name)\n          input.setAttribute('value', /** @type {string} */ (value))\n\n          form.appendChild(input)\n        }\n\n        // Append form to page and submit it to perform logout and redirect.\n        document.body.appendChild(form)\n        form.submit()\n      },\n\n      register: async (options) => {\n        window.location.assign(await this.createRegisterUrl(options))\n        return await new Promise(() => {})\n      },\n\n      accountManagement: async () => {\n        const accountUrl = this.createAccountUrl()\n        if (typeof accountUrl !== 'undefined') {\n          window.location.href = accountUrl\n        } else {\n          throw new Error('Not supported by the OIDC server')\n        }\n        return await new Promise(() => {})\n      },\n\n      redirectUri\n    }\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadCordovaAdapter () {\n    /**\n     * @param {string} loginUrl\n     * @param {string} target\n     * @param {string} options\n     * @returns {WindowProxy | null}\n     */\n    const cordovaOpenWindowWrapper = (loginUrl, target, options) => {\n      if (window.cordova && window.cordova.InAppBrowser) {\n        // Use inappbrowser for IOS and Android if available\n        return window.cordova.InAppBrowser.open(loginUrl, target, options)\n      } else {\n        return window.open(loginUrl, target, options)\n      }\n    }\n\n    const shallowCloneCordovaOptions = (userOptions) => {\n      if (userOptions && userOptions.cordovaOptions) {\n        return Object.keys(userOptions.cordovaOptions).reduce((options, optionName) => {\n          options[optionName] = userOptions.cordovaOptions[optionName]\n          return options\n        }, {})\n      } else {\n        return {}\n      }\n    }\n\n    const formatCordovaOptions = (cordovaOptions) => {\n      return Object.keys(cordovaOptions).reduce((options, optionName) => {\n        options.push(optionName + '=' + cordovaOptions[optionName])\n        return options\n      }, []).join(',')\n    }\n\n    const createCordovaOptions = (userOptions) => {\n      const cordovaOptions = shallowCloneCordovaOptions(userOptions)\n      cordovaOptions.location = 'no'\n      if (userOptions && userOptions.prompt === 'none') {\n        cordovaOptions.hidden = 'yes'\n      }\n      return formatCordovaOptions(cordovaOptions)\n    }\n\n    const getCordovaRedirectUri = () => {\n      return this.redirectUri || 'http://localhost'\n    }\n\n    return {\n      login: async (options) => {\n        const cordovaOptions = createCordovaOptions(options)\n        const loginUrl = await this.createLoginUrl(options)\n        const ref = cordovaOpenWindowWrapper(loginUrl, '_blank', cordovaOptions)\n        let completed = false\n        let closed = false\n\n        function closeBrowser () {\n          closed = true\n          ref.close()\n        };\n\n        return await new Promise((resolve, reject) => {\n          ref.addEventListener('loadstart', async (event) => {\n            if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n              const callback = this.#parseCallback(event.url)\n\n              try {\n                await this.#processCallback(callback)\n                resolve()\n              } catch (error) {\n                reject(error)\n              }\n              closeBrowser()\n              completed = true\n            }\n          })\n\n          ref.addEventListener('loaderror', async (event) => {\n            if (!completed) {\n              if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n                const callback = this.#parseCallback(event.url)\n                try {\n                  await this.#processCallback(callback)\n                  resolve()\n                } catch (error) {\n                  reject(error)\n                }\n                closeBrowser()\n                completed = true\n              } else {\n                reject(new Error('Unable to process login.'))\n                closeBrowser()\n              }\n            }\n          })\n\n          ref.addEventListener('exit', function (event) {\n            if (!closed) {\n              reject(new Error('User closed the login window.'))\n            }\n          })\n        })\n      },\n\n      logout: async (options) => {\n        const logoutUrl = this.createLogoutUrl(options)\n        const ref = cordovaOpenWindowWrapper(logoutUrl, '_blank', 'location=no,hidden=yes,clearcache=yes')\n        let error = false\n\n        ref.addEventListener('loadstart', (event) => {\n          if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n            ref.close()\n          }\n        })\n\n        ref.addEventListener('loaderror', (event) => {\n          if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n            ref.close()\n          } else {\n            error = true\n            ref.close()\n          }\n        })\n\n        await new Promise((resolve, reject) => {\n          ref.addEventListener('exit', () => {\n            if (error) {\n              reject(new Error('User closed the login window.'))\n            } else {\n              this.clearToken()\n              resolve()\n            }\n          })\n        })\n      },\n\n      register: async (options) => {\n        const registerUrl = await this.createRegisterUrl()\n        const cordovaOptions = createCordovaOptions(options)\n        const ref = cordovaOpenWindowWrapper(registerUrl, '_blank', cordovaOptions)\n\n        /** @type {Promise<void>} */\n        const promise = new Promise((resolve, reject) => {\n          ref.addEventListener('loadstart', async (event) => {\n            if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n              ref.close()\n              const oauth = this.#parseCallback(event.url)\n\n              try {\n                await this.#processCallback(oauth)\n                resolve()\n              } catch (error) {\n                reject(error)\n              }\n            }\n          })\n        })\n\n        await promise\n      },\n\n      accountManagement: async () => {\n        const accountUrl = this.createAccountUrl()\n        if (typeof accountUrl !== 'undefined') {\n          const ref = cordovaOpenWindowWrapper(accountUrl, '_blank', 'location=no')\n          ref.addEventListener('loadstart', function (event) {\n            if (event.url.indexOf(getCordovaRedirectUri()) === 0) {\n              ref.close()\n            }\n          })\n        } else {\n          throw new Error('Not supported by the OIDC server')\n        }\n      },\n\n      redirectUri: () => {\n        return getCordovaRedirectUri()\n      }\n    }\n  }\n\n  /**\n   * @returns {KeycloakAdapter}\n   */\n  #loadCordovaNativeAdapter () {\n    /* global universalLinks */\n    return {\n      login: async (options) => {\n        const loginUrl = await this.createLoginUrl(options)\n\n        await new Promise((resolve, reject) => {\n          universalLinks.subscribe('keycloak', async (event) => {\n            universalLinks.unsubscribe('keycloak')\n            window.cordova.plugins.browsertab.close()\n            const oauth = this.#parseCallback(event.url)\n\n            try {\n              await this.#processCallback(oauth)\n              resolve()\n            } catch (error) {\n              reject(error)\n            }\n          })\n\n          window.cordova.plugins.browsertab.openUrl(loginUrl)\n        })\n      },\n\n      logout: async (options) => {\n        const logoutUrl = this.createLogoutUrl(options)\n\n        await new Promise((resolve) => {\n          universalLinks.subscribe('keycloak', () => {\n            universalLinks.unsubscribe('keycloak')\n            window.cordova.plugins.browsertab.close()\n            this.clearToken()\n            resolve()\n          })\n\n          window.cordova.plugins.browsertab.openUrl(logoutUrl)\n        })\n      },\n\n      register: async (options) => {\n        const registerUrl = await this.createRegisterUrl(options)\n\n        await new Promise((resolve, reject) => {\n          universalLinks.subscribe('keycloak', async (event) => {\n            universalLinks.unsubscribe('keycloak')\n            window.cordova.plugins.browsertab.close()\n            const oauth = this.#parseCallback(event.url)\n            try {\n              await this.#processCallback(oauth)\n              resolve()\n            } catch (error) {\n              reject(error)\n            }\n          })\n\n          window.cordova.plugins.browsertab.openUrl(registerUrl)\n        })\n      },\n\n      accountManagement: async () => {\n        const accountUrl = this.createAccountUrl()\n        if (typeof accountUrl !== 'undefined') {\n          window.cordova.plugins.browsertab.openUrl(accountUrl)\n        } else {\n          throw new Error('Not supported by the OIDC server')\n        }\n      },\n\n      redirectUri: (options) => {\n        if (options && options.redirectUri) {\n          return options.redirectUri\n        } else if (this.redirectUri) {\n          return this.redirectUri\n        } else {\n          return 'http://localhost'\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async #loadConfig () {\n    if (typeof this.#config === 'string') {\n      const jsonConfig = await fetchJsonConfig(this.#config)\n      this.authServerUrl = jsonConfig['auth-server-url']\n      this.realm = jsonConfig.realm\n      this.clientId = jsonConfig.resource\n      this.#setupEndpoints()\n    } else {\n      this.clientId = this.#config.clientId\n\n      if ('oidcProvider' in this.#config) {\n        await this.#loadOidcConfig(this.#config.oidcProvider)\n      } else {\n        this.authServerUrl = this.#config.url\n        this.realm = this.#config.realm\n        this.#setupEndpoints()\n      }\n    }\n  }\n\n  /**\n   * @returns {void}\n   */\n  #setupEndpoints () {\n    this.endpoints = {\n      authorize: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/auth'\n      },\n      token: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/token'\n      },\n      logout: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/logout'\n      },\n      checkSessionIframe: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/login-status-iframe.html'\n      },\n      thirdPartyCookiesIframe: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/3p-cookies/step1.html'\n      },\n      register: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/registrations'\n      },\n      userinfo: () => {\n        return this.#getRealmUrl() + '/protocol/openid-connect/userinfo'\n      }\n    }\n  }\n\n  /**\n   * @param {string | OpenIdProviderMetadata} oidcProvider\n   * @returns {Promise<void>}\n   */\n  async #loadOidcConfig (oidcProvider) {\n    if (typeof oidcProvider === 'string') {\n      const url = `${stripTrailingSlash(oidcProvider)}/.well-known/openid-configuration`\n      const openIdConfig = await fetchOpenIdConfig(url)\n      this.#setupOidcEndpoints(openIdConfig)\n    } else {\n      this.#setupOidcEndpoints(oidcProvider)\n    }\n  }\n\n  /**\n   * @param {OpenIdProviderMetadata} config\n   * @returns {void}\n   */\n  #setupOidcEndpoints (config) {\n    this.endpoints = {\n      authorize () {\n        return config.authorization_endpoint\n      },\n      token () {\n        return config.token_endpoint\n      },\n      logout () {\n        if (!config.end_session_endpoint) {\n          throw new Error('Not supported by the OIDC server')\n        }\n        return config.end_session_endpoint\n      },\n      checkSessionIframe () {\n        if (!config.check_session_iframe) {\n          throw new Error('Not supported by the OIDC server')\n        }\n        return config.check_session_iframe\n      },\n      register () {\n        throw new Error('Redirection to \"Register user\" page not supported in standard OIDC mode')\n      },\n      userinfo () {\n        if (!config.userinfo_endpoint) {\n          throw new Error('Not supported by the OIDC server')\n        }\n        return config.userinfo_endpoint\n      }\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async #check3pCookiesSupported () {\n    if ((!this.#loginIframe.enable && !this.silentCheckSsoRedirectUri) || typeof this.endpoints.thirdPartyCookiesIframe !== 'function') {\n      return\n    }\n\n    const iframe = document.createElement('iframe')\n    iframe.setAttribute('src', this.endpoints.thirdPartyCookiesIframe())\n    iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin')\n    iframe.setAttribute('title', 'keycloak-3p-check-iframe')\n    iframe.style.display = 'none'\n    document.body.appendChild(iframe)\n\n    /** @type {Promise<void>} */\n    const promise = new Promise((resolve) => {\n      /**\n       * @param {MessageEvent} event\n       */\n      const messageCallback = (event) => {\n        if (iframe.contentWindow !== event.source) {\n          return\n        }\n\n        if (event.data !== 'supported' && event.data !== 'unsupported') {\n          return\n        } else if (event.data === 'unsupported') {\n          this.#logWarn(\n            '[KEYCLOAK] Your browser is blocking access to 3rd-party cookies, this means:\\n\\n' +\n                        ' - It is not possible to retrieve tokens without redirecting to the Keycloak server (a.k.a. no support for silent authentication).\\n' +\n                        ' - It is not possible to automatically detect changes to the session status (such as the user logging out in another tab).\\n\\n' +\n                        'For more information see: https://www.keycloak.org/securing-apps/javascript-adapter#_modern_browsers'\n          )\n\n          this.#loginIframe.enable = false\n          if (this.silentCheckSsoFallback) {\n            this.silentCheckSsoRedirectUri = undefined\n          }\n        }\n\n        document.body.removeChild(iframe)\n        window.removeEventListener('message', messageCallback)\n        resolve()\n      }\n\n      window.addEventListener('message', messageCallback, false)\n    })\n\n    return await applyTimeoutToPromise(promise, this.messageReceiveTimeout, 'Timeout when waiting for 3rd party check iframe message.')\n  }\n\n  /**\n   * @param {KeycloakInitOptions} initOptions\n   * @returns {Promise<void>}\n   */\n  async #processInit (initOptions) {\n    const callback = this.#parseCallback(window.location.href)\n\n    if (callback?.redirectUri) {\n      window.history.replaceState(window.history.state, '', callback.redirectUri)\n    }\n\n    if (callback && callback.valid) {\n      await this.#setupCheckLoginIframe()\n      await this.#processCallback(callback)\n      return\n    }\n\n    /** @param {boolean} prompt */\n    const doLogin = async (prompt) => {\n      /** @type {KeycloakLoginOptions} */\n      const options = {}\n\n      if (!prompt) {\n        options.prompt = 'none'\n      }\n\n      if (initOptions.locale) {\n        options.locale = initOptions.locale\n      }\n\n      await this.login(options)\n    }\n\n    const onLoad = async () => {\n      switch (initOptions.onLoad) {\n        case 'check-sso':\n          if (this.#loginIframe.enable) {\n            await this.#setupCheckLoginIframe()\n            const unchanged = await this.#checkLoginIframe()\n\n            if (!unchanged) {\n              this.silentCheckSsoRedirectUri ? await this.#checkSsoSilently() : await doLogin(false)\n            }\n          } else {\n            this.silentCheckSsoRedirectUri ? await this.#checkSsoSilently() : await doLogin(false)\n          }\n          break\n        case 'login-required':\n          await doLogin(true)\n          break\n        default:\n          throw new Error('Invalid value for onLoad')\n      }\n    }\n\n    if (initOptions.token && initOptions.refreshToken) {\n      this.#setToken(initOptions.token, initOptions.refreshToken, initOptions.idToken)\n\n      if (this.#loginIframe.enable) {\n        await this.#setupCheckLoginIframe()\n        const unchanged = await this.#checkLoginIframe()\n\n        if (unchanged) {\n          this.onAuthSuccess?.()\n          this.#scheduleCheckIframe()\n        }\n      } else {\n        try {\n          await this.updateToken(-1)\n          this.onAuthSuccess?.()\n        } catch (error) {\n          this.onAuthError?.()\n          if (initOptions.onLoad) {\n            await onLoad()\n          } else {\n            throw error\n          }\n        }\n      }\n    } else if (initOptions.onLoad) {\n      await onLoad()\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async #setupCheckLoginIframe () {\n    if (!this.#loginIframe.enable || this.#loginIframe.iframe) {\n      return\n    }\n\n    const iframe = document.createElement('iframe')\n    this.#loginIframe.iframe = iframe\n    iframe.setAttribute('src', this.endpoints.checkSessionIframe())\n    iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin')\n    iframe.setAttribute('title', 'keycloak-session-iframe')\n    iframe.style.display = 'none'\n    document.body.appendChild(iframe)\n\n    /**\n     * @param {MessageEvent} event\n     */\n    const messageCallback = (event) => {\n      if (event.origin !== this.#loginIframe.iframeOrigin || this.#loginIframe.iframe?.contentWindow !== event.source) {\n        return\n      }\n\n      if (!(event.data === 'unchanged' || event.data === 'changed' || event.data === 'error')) {\n        return\n      }\n\n      if (event.data !== 'unchanged') {\n        this.clearToken()\n      }\n\n      const callbacks = this.#loginIframe.callbackList\n      this.#loginIframe.callbackList = []\n\n      for (const callback of callbacks.reverse()) {\n        if (event.data === 'error') {\n          callback(new Error('Error while checking login iframe'))\n        } else {\n          callback(null, event.data === 'unchanged')\n        }\n      }\n    }\n\n    window.addEventListener('message', messageCallback, false)\n\n    /** @type {Promise<void>} */\n    const promise = new Promise((resolve) => {\n      iframe.addEventListener('load', () => {\n        const authUrl = this.endpoints.authorize()\n        if (authUrl.startsWith('/')) {\n          this.#loginIframe.iframeOrigin = globalThis.location.origin\n        } else {\n          this.#loginIframe.iframeOrigin = new URL(authUrl).origin\n        }\n        resolve()\n      })\n    })\n\n    await promise\n  }\n\n  /**\n   * @returns {Promise<boolean | undefined>}\n   */\n  async #checkLoginIframe () {\n    if (!this.#loginIframe.iframe || !this.#loginIframe.iframeOrigin) {\n      return\n    }\n\n    const message = `${this.clientId} ${(this.sessionId ? this.sessionId : '')}`\n    const origin = this.#loginIframe.iframeOrigin\n\n    /** @type {Promise<boolean>} */\n    const promise = new Promise((resolve, reject) => {\n      /** @type {(error: Error | null, value?: boolean) => void} */\n      const callback = (error, result) => error ? reject(error) : resolve(/** @type {boolean} */ (result))\n\n      this.#loginIframe.callbackList.push(callback)\n\n      if (this.#loginIframe.callbackList.length === 1) {\n        this.#loginIframe.iframe?.contentWindow?.postMessage(message, origin)\n      }\n    })\n\n    return await promise\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async #checkSsoSilently () {\n    const iframe = document.createElement('iframe')\n    const src = await this.createLoginUrl({ prompt: 'none', redirectUri: this.silentCheckSsoRedirectUri })\n    iframe.setAttribute('src', src)\n    iframe.setAttribute('sandbox', 'allow-storage-access-by-user-activation allow-scripts allow-same-origin')\n    iframe.setAttribute('title', 'keycloak-silent-check-sso')\n    iframe.style.display = 'none'\n    document.body.appendChild(iframe)\n\n    return await new Promise((resolve, reject) => {\n      /**\n       * @param {MessageEvent} event\n       */\n      const messageCallback = async (event) => {\n        if (event.origin !== window.location.origin || iframe.contentWindow !== event.source) {\n          return\n        }\n\n        const oauth = this.#parseCallback(event.data)\n\n        try {\n          await this.#processCallback(oauth)\n          resolve()\n        } catch (error) {\n          reject(error)\n        }\n\n        document.body.removeChild(iframe)\n        window.removeEventListener('message', messageCallback)\n      }\n\n      window.addEventListener('message', messageCallback)\n    })\n  };\n\n  /**\n   * @param {string} url\n   */\n  #parseCallback (url) {\n    const oauth = this.#parseCallbackUrl(url)\n    if (!oauth) {\n      return\n    }\n\n    const oauthState = this.#callbackStorage.get(oauth.state)\n\n    if (oauthState) {\n      oauth.valid = true\n      oauth.redirectUri = oauthState.redirectUri\n      oauth.storedNonce = oauthState.nonce\n      oauth.prompt = oauthState.prompt\n      oauth.pkceCodeVerifier = oauthState.pkceCodeVerifier\n      oauth.loginOptions = oauthState.loginOptions\n    }\n\n    return oauth\n  }\n\n  /**\n   * @param {string} urlString\n   */\n  #parseCallbackUrl (urlString) {\n    let supportedParams = []\n    switch (this.flow) {\n      case 'standard':\n        supportedParams = ['code', 'state', 'session_state', 'kc_action_status', 'kc_action', 'iss']\n        break\n      case 'implicit':\n        supportedParams = ['access_token', 'token_type', 'id_token', 'state', 'session_state', 'expires_in', 'kc_action_status', 'kc_action', 'iss']\n        break\n      case 'hybrid':\n        supportedParams = ['access_token', 'token_type', 'id_token', 'code', 'state', 'session_state', 'expires_in', 'kc_action_status', 'kc_action', 'iss']\n        break\n    }\n\n    supportedParams.push('error')\n    supportedParams.push('error_description')\n    supportedParams.push('error_uri')\n\n    const url = new URL(urlString)\n    let redirectUri = ''\n    let parsed\n\n    if (this.responseMode === 'query' && url.searchParams.size > 0) {\n      parsed = this.#parseCallbackParams(url.search, supportedParams)\n      url.search = parsed.paramsString\n      redirectUri = url.toString()\n    } else if (this.responseMode === 'fragment' && url.hash.length > 0) {\n      parsed = this.#parseCallbackParams(url.hash.substring(1), supportedParams)\n      url.hash = ''\n      redirectUri = url.toString()\n    }\n\n    if (parsed?.oauthParams) {\n      if (this.flow === 'standard' || this.flow === 'hybrid') {\n        if ((parsed.oauthParams.code || parsed.oauthParams.error) && parsed.oauthParams.state) {\n          parsed.oauthParams.redirectUri = redirectUri\n          return parsed.oauthParams\n        }\n      } else if (this.flow === 'implicit') {\n        if ((parsed.oauthParams.access_token || parsed.oauthParams.error) && parsed.oauthParams.state) {\n          parsed.oauthParams.redirectUri = redirectUri\n          return parsed.oauthParams\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef {Object} ParsedCallbackParams\n   * @property {string} paramsString\n   * @property {Record<string, string | undefined>} oauthParams\n   */\n\n  /**\n   * @param {string} paramsString\n   * @param {string[]} supportedParams\n   * @returns {ParsedCallbackParams}\n   */\n  #parseCallbackParams (paramsString, supportedParams) {\n    const params = new URLSearchParams(paramsString)\n    /** @type {Record<string, string>} */\n    const oauthParams = {}\n\n    for (const [key, value] of Array.from(params.entries())) {\n      if (supportedParams.includes(key)) {\n        oauthParams[key] = value\n        params.delete(key)\n      }\n    }\n\n    return {\n      paramsString: params.toString(),\n      oauthParams\n    }\n  }\n\n  async #processCallback (oauth) {\n    const { code, error, prompt } = oauth\n    let timeLocal = new Date().getTime()\n\n    /**\n     * @param {string} accessToken\n     * @param {string=} refreshToken\n     * @param {string=} idToken\n     */\n    const authSuccess = (accessToken, refreshToken, idToken) => {\n      timeLocal = (timeLocal + new Date().getTime()) / 2\n\n      this.#setToken(accessToken, refreshToken, idToken, timeLocal)\n\n      if (this.#useNonce && (this.idTokenParsed && this.idTokenParsed.nonce !== oauth.storedNonce)) {\n        this.#logInfo('[KEYCLOAK] Invalid nonce, clearing token')\n        this.clearToken()\n        throw new Error('Invalid nonce.')\n      }\n    }\n\n    if (oauth.kc_action_status) {\n      this.onActionUpdate && this.onActionUpdate(oauth.kc_action_status, oauth.kc_action)\n    }\n\n    if (error) {\n      if (prompt !== 'none') {\n        if (oauth.error_description && oauth.error_description === 'authentication_expired') {\n          await this.login(oauth.loginOptions)\n        } else {\n          const errorData = { error, error_description: oauth.error_description }\n          this.onAuthError?.(errorData)\n          throw errorData\n        }\n      }\n      return\n    } else if ((this.flow !== 'standard') && (oauth.access_token || oauth.id_token)) {\n      authSuccess(oauth.access_token, undefined, oauth.id_token)\n      this.onAuthSuccess?.()\n    }\n\n    if ((this.flow !== 'implicit') && code) {\n      try {\n        const response = await fetchAccessToken(this.endpoints.token(), code, /** @type {string} */ (this.clientId), oauth.redirectUri, oauth.pkceCodeVerifier)\n        authSuccess(response.access_token, response.refresh_token, response.id_token)\n\n        if (this.flow === 'standard') {\n          this.onAuthSuccess?.()\n        }\n\n        this.#scheduleCheckIframe()\n      } catch (error) {\n        this.onAuthError?.()\n        throw error\n      }\n    }\n  }\n\n  async #scheduleCheckIframe () {\n    if (this.#loginIframe.enable && this.token) {\n      await waitForTimeout(this.#loginIframe.interval * 1000)\n      const unchanged = await this.#checkLoginIframe()\n\n      if (unchanged) {\n        await this.#scheduleCheckIframe()\n      }\n    }\n  }\n\n  /**\n   * @param {KeycloakLoginOptions} [options]\n   * @returns {Promise<void>}\n   */\n  login (options) {\n    return this.#adapter.login(options)\n  }\n\n  /**\n   * @param {KeycloakLoginOptions} [options]\n   * @returns {Promise<string>}\n   */\n  async createLoginUrl (options) {\n    const state = createUUID()\n    const nonce = createUUID()\n    const redirectUri = this.#adapter.redirectUri(options)\n    /** @type {CallbackState} */\n    const callbackState = {\n      state,\n      nonce,\n      redirectUri,\n      loginOptions: options\n    }\n\n    if (options?.prompt) {\n      callbackState.prompt = options.prompt\n    }\n\n    const url = options?.action === 'register'\n      ? this.endpoints.register()\n      : this.endpoints.authorize()\n\n    let scope = options?.scope || this.scope\n    const scopeValues = scope ? scope.split(' ') : []\n\n    // Ensure the 'openid' scope is always included.\n    if (!scopeValues.includes('openid')) {\n      scopeValues.unshift('openid')\n    }\n\n    scope = scopeValues.join(' ')\n\n    const params = new URLSearchParams([\n      ['client_id', /** @type {string} */ (this.clientId)],\n      // The endpoint URI MUST NOT include a fragment component.\n      // https://datatracker.ietf.org/doc/html/rfc6749#section-3.1.2\n      ['redirect_uri', stripHash(redirectUri)],\n      ['state', state],\n      ['response_mode', this.responseMode],\n      ['response_type', this.responseType],\n      ['scope', scope]\n    ])\n\n    if (this.#useNonce) {\n      params.append('nonce', nonce)\n    }\n\n    if (options?.prompt) {\n      params.append('prompt', options.prompt)\n    }\n\n    if (typeof options?.maxAge === 'number') {\n      params.append('max_age', options.maxAge.toString())\n    }\n\n    if (options?.loginHint) {\n      params.append('login_hint', options.loginHint)\n    }\n\n    if (options?.idpHint) {\n      params.append('kc_idp_hint', options.idpHint)\n    }\n\n    if (options?.action && options.action !== 'register') {\n      params.append('kc_action', options.action)\n    }\n\n    if (options?.locale) {\n      params.append('ui_locales', options.locale)\n    }\n\n    if (options?.acr) {\n      params.append('claims', buildClaimsParameter(options.acr))\n    }\n\n    if (options?.acrValues) {\n      params.append('acr_values', options.acrValues)\n    }\n\n    if (this.pkceMethod) {\n      try {\n        const codeVerifier = generateCodeVerifier(96)\n        const pkceChallenge = await generatePkceChallenge(this.pkceMethod, codeVerifier)\n\n        callbackState.pkceCodeVerifier = codeVerifier\n\n        params.append('code_challenge', pkceChallenge)\n        params.append('code_challenge_method', this.pkceMethod)\n      } catch (error) {\n        throw new Error('Failed to generate PKCE challenge.', { cause: error })\n      }\n    }\n\n    this.#callbackStorage.add(callbackState)\n\n    return `${url}?${params.toString()}`\n  }\n\n  /**\n   * @param {KeycloakLogoutOptions} [options]\n   * @returns {Promise<void>}\n   */\n  logout (options) {\n    return this.#adapter.logout(options)\n  }\n\n  /**\n   * @param {KeycloakLogoutOptions} [options]\n   * @returns {string}\n   */\n  createLogoutUrl (options) {\n    const logoutMethod = options?.logoutMethod ?? this.logoutMethod\n    const url = this.endpoints.logout()\n\n    if (logoutMethod === 'POST') {\n      return url\n    }\n\n    const params = new URLSearchParams([\n      ['client_id', /** @type {string} */ (this.clientId)],\n      ['post_logout_redirect_uri', this.#adapter.redirectUri(options)]\n    ])\n\n    if (this.idToken) {\n      params.append('id_token_hint', this.idToken)\n    }\n\n    return `${url}?${params.toString()}`\n  }\n\n  /**\n   * @param {KeycloakRegisterOptions} [options]\n   * @returns {Promise<void>}\n   */\n  register (options) {\n    return this.#adapter.register(options)\n  }\n\n  /**\n   * @param {KeycloakRegisterOptions} [options]\n   * @returns {Promise<string>}\n   */\n  createRegisterUrl (options) {\n    return this.createLoginUrl({ ...options, action: 'register' })\n  }\n\n  /**\n   * @param {KeycloakAccountOptions} [options]\n   * @returns {string}\n   */\n  createAccountUrl (options) {\n    const url = this.#getRealmUrl()\n\n    if (!url) {\n      throw new Error('Unable to create account URL, make sure the adapter is not configured using a generic OIDC provider.')\n    }\n\n    const params = new URLSearchParams([\n      ['referrer', /** @type {string} */ (this.clientId)],\n      ['referrer_uri', this.#adapter.redirectUri(options)]\n    ])\n\n    return `${url}/account?${params.toString()}`\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  accountManagement () {\n    return this.#adapter.accountManagement()\n  }\n\n  /**\n   * @param {string} role\n   * @returns {boolean}\n   */\n  hasRealmRole (role) {\n    const access = this.realmAccess\n    return !!access && access.roles.indexOf(role) >= 0\n  }\n\n  /**\n   * @param {string} role\n   * @param {string} [resource]\n   * @returns {boolean}\n   */\n  hasResourceRole (role, resource) {\n    if (!this.resourceAccess) {\n      return false\n    }\n\n    const access = this.resourceAccess[resource || /** @type {string} */ (this.clientId)]\n    return !!access && access.roles.indexOf(role) >= 0\n  }\n\n  /**\n   * @returns {Promise<KeycloakProfile>}\n   */\n  async loadUserProfile () {\n    const realmUrl = this.#getRealmUrl()\n\n    if (!realmUrl) {\n      throw new Error('Unable to load user profile, make sure the adapter is not configured using a generic OIDC provider.')\n    }\n\n    const url = `${realmUrl}/account`\n    /** @type {KeycloakProfile} */\n    const profile = await fetchJSON(url, {\n      headers: [buildAuthorizationHeader(this.token)]\n    })\n\n    return (this.profile = profile)\n  }\n\n  /**\n   * @returns {Promise<{}>}\n   */\n  async loadUserInfo () {\n    const url = this.endpoints.userinfo()\n    /** @type {{}} */\n    const userInfo = await fetchJSON(url, {\n      headers: [buildAuthorizationHeader(this.token)]\n    })\n\n    return (this.userInfo = userInfo)\n  }\n\n  /**\n   * @param {number} [minValidity]\n   * @returns {boolean}\n   */\n  isTokenExpired (minValidity) {\n    if (!this.tokenParsed || (!this.refreshToken && this.flow !== 'implicit')) {\n      throw new Error('Not authenticated')\n    }\n\n    if (this.timeSkew == null) {\n      this.#logInfo('[KEYCLOAK] Unable to determine if token is expired as timeskew is not set')\n      return true\n    }\n\n    if (typeof this.tokenParsed.exp !== 'number') {\n      return false\n    }\n\n    let expiresIn = this.tokenParsed.exp - Math.ceil(new Date().getTime() / 1000) + this.timeSkew\n    if (minValidity) {\n      if (isNaN(minValidity)) {\n        throw new Error('Invalid minValidity')\n      }\n      expiresIn -= minValidity\n    }\n    return expiresIn < 0\n  }\n\n  /**\n   * @param {number} minValidity\n   * @returns {Promise<boolean>}\n   */\n  async updateToken (minValidity) {\n    if (!this.refreshToken) {\n      throw new Error('Unable to update token, no refresh token available.')\n    }\n\n    minValidity = minValidity || 5\n\n    if (this.#loginIframe.enable) {\n      await this.#checkLoginIframe()\n    }\n\n    let refreshToken = false\n\n    if (minValidity === -1) {\n      refreshToken = true\n      this.#logInfo('[KEYCLOAK] Refreshing token: forced refresh')\n    } else if (!this.tokenParsed || this.isTokenExpired(minValidity)) {\n      refreshToken = true\n      this.#logInfo('[KEYCLOAK] Refreshing token: token expired')\n    }\n\n    if (!refreshToken) {\n      return false\n    }\n\n    /** @type {PromiseWithResolvers<boolean>} */\n    const { promise, resolve, reject } = Promise.withResolvers()\n\n    this.#refreshQueue.push({ resolve, reject })\n\n    if (this.#refreshQueue.length === 1) {\n      const url = this.endpoints.token()\n      let timeLocal = new Date().getTime()\n\n      try {\n        const response = await fetchRefreshToken(url, this.refreshToken, /** @type {string} */ (this.clientId))\n        this.#logInfo('[KEYCLOAK] Token refreshed')\n\n        timeLocal = (timeLocal + new Date().getTime()) / 2\n\n        this.#setToken(response.access_token, response.refresh_token, response.id_token, timeLocal)\n\n        this.onAuthRefreshSuccess?.()\n        for (let p = this.#refreshQueue.pop(); p != null; p = this.#refreshQueue.pop()) {\n          p.resolve(true)\n        }\n      } catch (error) {\n        this.#logWarn('[KEYCLOAK] Failed to refresh token')\n\n        if (error instanceof NetworkError && error.response.status === 400) {\n          this.clearToken()\n        }\n\n        this.onAuthRefreshError?.()\n        for (let p = this.#refreshQueue.pop(); p != null; p = this.#refreshQueue.pop()) {\n          p.reject(error)\n        }\n      }\n    }\n\n    return await promise\n  }\n\n  clearToken () {\n    if (this.token) {\n      this.#setToken()\n      this.onAuthLogout?.()\n      if (this.loginRequired) {\n        this.login()\n      }\n    }\n  }\n\n  /**\n   * @param {string} [token]\n   * @param {string} [refreshToken]\n   * @param {string} [idToken]\n   * @param {number} [timeLocal]\n   */\n  #setToken (token, refreshToken, idToken, timeLocal) {\n    if (this.tokenTimeoutHandle) {\n      clearTimeout(this.tokenTimeoutHandle)\n      this.tokenTimeoutHandle = undefined\n    }\n\n    if (refreshToken) {\n      this.refreshToken = refreshToken\n      this.refreshTokenParsed = decodeToken(refreshToken)\n    } else {\n      delete this.refreshToken\n      delete this.refreshTokenParsed\n    }\n\n    if (idToken) {\n      this.idToken = idToken\n      this.idTokenParsed = decodeToken(idToken)\n    } else {\n      delete this.idToken\n      delete this.idTokenParsed\n    }\n\n    if (token) {\n      this.token = token\n      this.tokenParsed = decodeToken(token)\n      this.sessionId = this.tokenParsed.sid\n      this.authenticated = true\n      this.subject = this.tokenParsed.sub\n      this.realmAccess = this.tokenParsed.realm_access\n      this.resourceAccess = this.tokenParsed.resource_access\n\n      if (timeLocal) {\n        this.timeSkew = Math.floor(timeLocal / 1000) - this.tokenParsed.iat\n      }\n\n      if (this.timeSkew !== null) {\n        this.#logInfo('[KEYCLOAK] Estimated time difference between browser and server is ' + this.timeSkew + ' seconds')\n\n        if (this.onTokenExpired) {\n          const expiresIn = (this.tokenParsed.exp - (new Date().getTime() / 1000) + this.timeSkew) * 1000\n          this.#logInfo('[KEYCLOAK] Token expires in ' + Math.round(expiresIn / 1000) + ' s')\n          if (expiresIn <= 0) {\n            this.onTokenExpired()\n          } else {\n            this.tokenTimeoutHandle = window.setTimeout(this.onTokenExpired, expiresIn)\n          }\n        }\n      }\n    } else {\n      delete this.token\n      delete this.tokenParsed\n      delete this.subject\n      delete this.realmAccess\n      delete this.resourceAccess\n\n      this.authenticated = false\n    }\n  }\n\n  /**\n   * @returns {string=}\n   */\n  #getRealmUrl () {\n    if (typeof this.authServerUrl === 'undefined') {\n      return\n    }\n\n    return `${stripTrailingSlash(this.authServerUrl)}/realms/${encodeURIComponent(/** @type {string} */ (this.realm))}`\n  }\n\n  /**\n   * @param {Function} fn\n   * @returns {(message: string) => void}\n   */\n  #createLogger (fn) {\n    return (message) => {\n      if (this.enableLogging) {\n        fn.call(console, message)\n      }\n    }\n  }\n}\n\n/**\n * @returns {string}\n */\nfunction createUUID () {\n  if (typeof crypto === 'undefined' || typeof crypto.randomUUID === 'undefined') {\n    throw new Error('Web Crypto API is not available.')\n  }\n\n  return crypto.randomUUID()\n}\n\n/**\n * @param {Acr} requestedAcr\n * @returns {string}\n */\nfunction buildClaimsParameter (requestedAcr) {\n  return JSON.stringify({\n    id_token: {\n      acr: requestedAcr\n    }\n  })\n}\n\n/**\n * @param {number} len\n * @returns {string}\n */\nfunction generateCodeVerifier (len) {\n  return generateRandomString(len, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789')\n}\n\n/**\n * @param {string} pkceMethod\n * @param {string} codeVerifier\n * @returns {Promise<string>}\n */\nasync function generatePkceChallenge (pkceMethod, codeVerifier) {\n  if (pkceMethod !== 'S256') {\n    throw new TypeError(`Invalid value for 'pkceMethod', expected 'S256' but got '${pkceMethod}'.`)\n  }\n\n  // hash codeVerifier, then encode as url-safe base64 without padding\n  const hashBytes = new Uint8Array(await sha256Digest(codeVerifier))\n  const encodedHash = bytesToBase64(hashBytes)\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')\n    .replace(/=/g, '')\n\n  return encodedHash\n}\n\n/**\n * @param {number} len\n * @param {string} alphabet\n * @returns {string}\n */\nfunction generateRandomString (len, alphabet) {\n  const randomData = generateRandomData(len)\n  const chars = new Array(len)\n  for (let i = 0; i < len; i++) {\n    chars[i] = alphabet.charCodeAt(randomData[i] % alphabet.length)\n  }\n  return String.fromCharCode.apply(null, chars)\n}\n\n/**\n * @param {number} len\n * @returns {Uint8Array<ArrayBuffer>}\n */\nfunction generateRandomData (len) {\n  if (typeof crypto === 'undefined' || typeof crypto.getRandomValues === 'undefined') {\n    throw new Error('Web Crypto API is not available.')\n  }\n\n  return crypto.getRandomValues(new Uint8Array(len))\n}\n\n/**\n * Function to extend existing native Promise with timeout\n *\n * @template T\n * @param {Promise<T>} promise\n * @param {number} timeout\n * @param {string} errorMessage\n * @returns {Promise<T>}\n */\nfunction applyTimeoutToPromise (promise, timeout, errorMessage) {\n  /** @type {number} */\n  let timeoutHandle\n  const timeoutPromise = new Promise(function (resolve, reject) {\n    timeoutHandle = window.setTimeout(function () {\n      reject(new Error(errorMessage || 'Promise is not settled within timeout of ' + timeout + 'ms'))\n    }, timeout)\n  })\n\n  return Promise.race([promise, timeoutPromise]).finally(function () {\n    clearTimeout(timeoutHandle)\n  })\n}\n\n/**\n * @returns {CallbackStorage}\n */\nfunction createCallbackStorage () {\n  try {\n    return new LocalStorage()\n  } catch (err) {\n    return new CookieStorage()\n  }\n}\n\nconst STORAGE_KEY_PREFIX = 'kc-callback-'\n\n/**\n * @typedef {Object} CallbackState\n * @property {string} state\n * @property {string} nonce\n * @property {string} redirectUri\n * @property {KeycloakLoginOptions} [loginOptions]\n * @property {KeycloakLoginOptions['prompt']} [prompt]\n * @property {string} [pkceCodeVerifier]\n */\n\n/**\n * @typedef {Object} CallbackStorage\n * @property {(state?: string) => CallbackState | null} get\n * @property {(state: CallbackState) => void} add\n */\n\n/**\n * @implements {CallbackStorage}\n */\nclass LocalStorage {\n  constructor () {\n    globalThis.localStorage.setItem('kc-test', 'test')\n    globalThis.localStorage.removeItem('kc-test')\n  }\n\n  /**\n   * @param {string} [state]\n   * @returns {CallbackState | null}\n   */\n  get (state) {\n    if (!state) {\n      return null\n    }\n\n    this.#clearInvalidValues()\n\n    const key = STORAGE_KEY_PREFIX + state\n    const value = globalThis.localStorage.getItem(key)\n\n    if (value) {\n      globalThis.localStorage.removeItem(key)\n      return JSON.parse(value)\n    }\n\n    return null\n  };\n\n  /**\n   * @param {CallbackState} state\n   */\n  add (state) {\n    this.#clearInvalidValues()\n\n    const key = STORAGE_KEY_PREFIX + state.state\n    const value = JSON.stringify({\n      ...state,\n      // Set the expiry time to 1 hour from now.\n      expires: Date.now() + (60 * 60 * 1000)\n    })\n\n    try {\n      globalThis.localStorage.setItem(key, value)\n    } catch (error) {\n      // If the storage is full, clear all known values and try again.\n      this.#clearAllValues()\n      globalThis.localStorage.setItem(key, value)\n    }\n  };\n\n  /**\n   * Clears all values from local storage that are no longer valid.\n   */\n  #clearInvalidValues () {\n    const currentTime = Date.now()\n\n    for (const [key, value] of this.#getStoredEntries()) {\n      // Attempt to parse the expiry time from the value.\n      const expiry = this.#parseExpiry(value)\n\n      // Discard the value if it is malformed or expired.\n      if (expiry === null || expiry < currentTime) {\n        globalThis.localStorage.removeItem(key)\n      }\n    }\n  }\n\n  /**\n   * Clears all known values from local storage.\n   */\n  #clearAllValues () {\n    for (const [key] of this.#getStoredEntries()) {\n      globalThis.localStorage.removeItem(key)\n    }\n  }\n\n  /**\n   * Gets all entries stored in local storage that are known to be managed by this class.\n   * @returns {[string, string][]} An array of key-value pairs.\n   */\n  #getStoredEntries () {\n    return Object.entries(globalThis.localStorage).filter(([key]) => key.startsWith(STORAGE_KEY_PREFIX))\n  }\n\n  /**\n   * Parses the expiry time from a value stored in local storage.\n   * @param {string} value\n   * @returns {number | null} The expiry time in milliseconds, or `null` if the value is malformed.\n   */\n  #parseExpiry (value) {\n    let parsedValue\n\n    // Attempt to parse the value as JSON.\n    try {\n      parsedValue = JSON.parse(value)\n    } catch (error) {\n      return null\n    }\n\n    // Attempt to extract the 'expires' property.\n    if (isObject(parsedValue) && 'expires' in parsedValue && typeof parsedValue.expires === 'number') {\n      return parsedValue.expires\n    }\n\n    return null\n  }\n}\n\n/**\n * @implements {CallbackStorage}\n */\nclass CookieStorage {\n  /**\n   * @param {string} [state]\n   * @returns {CallbackState | null}\n   */\n  get (state) {\n    if (!state) {\n      return null\n    }\n\n    const value = this.#getCookie(STORAGE_KEY_PREFIX + state)\n    this.#setCookie(STORAGE_KEY_PREFIX + state, '', this.#cookieExpiration(-100))\n    if (value) {\n      return JSON.parse(value)\n    }\n\n    return null\n  }\n\n  /**\n   * @param {CallbackState} state\n   */\n  add (state) {\n    this.#setCookie(STORAGE_KEY_PREFIX + state.state, JSON.stringify(state), this.#cookieExpiration(60))\n  }\n\n  /**\n   * @param {string} key\n   * @returns\n   */\n  #getCookie (key) {\n    const name = key + '='\n    const ca = document.cookie.split(';')\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i]\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1)\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length)\n      }\n    }\n    return ''\n  }\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   * @param {Date} expirationDate\n   */\n  #setCookie (key, value, expirationDate) {\n    const cookie = key + '=' + value + '; ' +\n            'expires=' + expirationDate.toUTCString() + '; '\n    document.cookie = cookie\n  }\n\n  /**\n   * @param {number} minutes\n   * @returns {Date}\n   */\n  #cookieExpiration (minutes) {\n    const exp = new Date()\n    exp.setTime(exp.getTime() + (minutes * 60 * 1000))\n    return exp\n  }\n}\n\n/**\n * @param {Uint8Array<ArrayBuffer>} bytes\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\n */\nfunction bytesToBase64 (bytes) {\n  const binString = String.fromCodePoint(...bytes)\n  return btoa(binString)\n}\n\n/**\n * @param {string} message\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest#basic_example\n */\nasync function sha256Digest (message) {\n  const encoder = new TextEncoder()\n  const data = encoder.encode(message)\n\n  if (typeof crypto === 'undefined' || typeof crypto.subtle === 'undefined') {\n    throw new Error('Web Crypto API is not available.')\n  }\n\n  return await crypto.subtle.digest('SHA-256', data)\n}\n\n/**\n * @param {string} token\n * @returns {KeycloakTokenParsed}\n */\nfunction decodeToken (token) {\n  const [, payload] = token.split('.')\n\n  if (typeof payload !== 'string') {\n    throw new Error('Unable to decode token, payload not found.')\n  }\n\n  let decoded\n\n  try {\n    decoded = base64UrlDecode(payload)\n  } catch (error) {\n    throw new Error('Unable to decode token, payload is not a valid Base64URL value.', { cause: error })\n  }\n\n  try {\n    return JSON.parse(decoded)\n  } catch (error) {\n    throw new Error('Unable to decode token, payload is not a valid JSON value.', { cause: error })\n  }\n}\n\n/**\n * @param {string} input\n */\nfunction base64UrlDecode (input) {\n  let output = input\n    .replaceAll('-', '+')\n    .replaceAll('_', '/')\n\n  switch (output.length % 4) {\n    case 0:\n      break\n    case 2:\n      output += '=='\n      break\n    case 3:\n      output += '='\n      break\n    default:\n      throw new Error('Input is not of the correct length.')\n  }\n\n  try {\n    return b64DecodeUnicode(output)\n  } catch (error) {\n    return atob(output)\n  }\n}\n\n/**\n * @param {string} input\n */\nfunction b64DecodeUnicode (input) {\n  return decodeURIComponent(atob(input).replace(/(.)/g, (m, p) => {\n    let code = p.charCodeAt(0).toString(16).toUpperCase()\n\n    if (code.length < 2) {\n      code = '0' + code\n    }\n\n    return '%' + code\n  }))\n}\n\n/**\n * Check if the input is an object that can be operated on.\n * @param {unknown} input\n */\nfunction isObject (input) {\n  return typeof input === 'object' && input !== null\n}\n\n/**\n * @typedef {Object} JsonConfig The JSON version of the adapter configuration.\n * @property {string} auth-server-url The URL of the authentication server.\n * @property {string} realm The name of the realm.\n * @property {string} resource The name of the resource, usually the client ID.\n */\n\n/**\n * Fetch the adapter configuration from the given URL.\n * @param {string} url\n * @returns {Promise<JsonConfig>}\n */\nasync function fetchJsonConfig (url) {\n  return await fetchJSON(url)\n}\n\n/**\n * Fetch the OpenID configuration from the given URL.\n * @param {string} url\n * @returns {Promise<OpenIdProviderMetadata>}\n */\nasync function fetchOpenIdConfig (url) {\n  return await fetchJSON(url)\n}\n\n/**\n * @typedef {Object} AccessTokenResponse The successful token response from the authorization server, based on the {@link https://datatracker.ietf.org/doc/html/rfc6749#section-5.1 OAuth 2.0 Authorization Framework specification}.\n * @property {string} access_token The access token issued by the authorization server.\n * @property {string} token_type The type of the token issued by the authorization server.\n * @property {number} [expires_in] The lifetime in seconds of the access token.\n * @property {string} [refresh_token] The refresh token issued by the authorization server.\n * @property {string} [id_token] The ID token issued by the authorization server, if requested.\n * @property {string} [scope] The scope of the access token.\n */\n\n/**\n * Fetch the access token from the given URL.\n * @param {string} url\n * @param {string} code\n * @param {string} clientId\n * @param {string} redirectUri\n * @param {string} [pkceCodeVerifier]\n * @returns {Promise<AccessTokenResponse>}\n */\nasync function fetchAccessToken (url, code, clientId, redirectUri, pkceCodeVerifier) {\n  const body = new URLSearchParams([\n    ['code', code],\n    ['grant_type', 'authorization_code'],\n    ['client_id', clientId],\n    ['redirect_uri', stripHash(redirectUri)]\n  ])\n\n  if (pkceCodeVerifier) {\n    body.append('code_verifier', pkceCodeVerifier)\n  }\n\n  return await fetchJSON(url, {\n    method: 'POST',\n    credentials: 'include',\n    body\n  })\n}\n\n/**\n * Fetch the refresh token from the given URL.\n * @param {string} url\n * @param {string} refreshToken\n * @param {string} clientId\n * @returns {Promise<AccessTokenResponse>}\n */\nasync function fetchRefreshToken (url, refreshToken, clientId) {\n  const body = new URLSearchParams([\n    ['grant_type', 'refresh_token'],\n    ['refresh_token', refreshToken],\n    ['client_id', clientId]\n  ])\n\n  return await fetchJSON(url, {\n    method: 'POST',\n    credentials: 'include',\n    body\n  })\n}\n\n/**\n * @template [T=unknown]\n * @param {string} url\n * @param {RequestInit} init\n * @returns {Promise<T>}\n */\nasync function fetchJSON (url, init = {}) {\n  const headers = new Headers(init.headers)\n  headers.set('Accept', CONTENT_TYPE_JSON)\n\n  const response = await fetchWithErrorHandling(url, {\n    ...init,\n    headers\n  })\n\n  return await response.json()\n}\n\n/**\n * @param {string} url\n * @param {RequestInit} [init]\n * @returns {Promise<Response>}\n */\nasync function fetchWithErrorHandling (url, init) {\n  const response = await fetch(url, init)\n\n  if (!response.ok) {\n    throw new NetworkError('Server responded with an invalid status.', { response })\n  }\n\n  return response\n}\n\n/**\n * @param {string} [token]\n * @returns {[string, string]}\n */\nfunction buildAuthorizationHeader (token) {\n  if (!token) {\n    throw new Error('Unable to build authorization header, token is not set, make sure the user is authenticated.')\n  }\n\n  return ['Authorization', `bearer ${token}`]\n}\n\n/**\n * @param {string} url\n * @returns {string}\n */\nfunction stripTrailingSlash (url) {\n  return url.endsWith('/') ? url.slice(0, -1) : url\n}\n\n/**\n * @param {string} url\n * @returns {string}\n */\nfunction stripHash (url) {\n  const parsedUrl = new URL(url)\n  parsedUrl.hash = ''\n  return parsedUrl.toString()\n}\n\n/**\n * @typedef {Object} NetworkErrorOptionsProperties\n * @property {Response} response\n * @typedef {ErrorOptions & NetworkErrorOptionsProperties} NetworkErrorOptions\n */\n\nexport class NetworkError extends Error {\n  /** @type {Response} */\n  response\n\n  /**\n   * @param {string} message\n   * @param {NetworkErrorOptions} options\n   */\n  constructor (message, options) {\n    super(message, options)\n    this.response = options.response\n  }\n}\n\n/**\n * @param {number} delay\n * @returns {Promise<void>}\n */\nconst waitForTimeout = (delay) => new Promise((resolve) => setTimeout(resolve, delay))\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}