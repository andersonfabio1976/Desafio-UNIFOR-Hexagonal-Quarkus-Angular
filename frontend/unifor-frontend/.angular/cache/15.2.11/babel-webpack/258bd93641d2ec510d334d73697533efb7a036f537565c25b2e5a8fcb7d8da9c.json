{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProfessorService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = `${environment.apiUrl}/professores`;\n  }\n  listar() {\n    return this.http.get(this.apiUrl);\n  }\n  salvar(professor) {\n    return this.http.post(this.apiUrl, professor);\n  }\n  excluir(identifier) {\n    return this.http.delete(`${this.apiUrl}/${identifier}`);\n  }\n  static {\n    this.ɵfac = function ProfessorService_Factory(t) {\n      return new (t || ProfessorService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ProfessorService,\n      factory: ProfessorService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAW1D,OAAM,MAAOC,gBAAgB;EAG3BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,GAAGH,WAAW,CAACI,MAAM,cAAc;EAEb;EAEvCC,MAAM;IACJ,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,MAAM,CAAC;EAChD;EAEAG,MAAM,CAACC,SAAoB;IACzB,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACL,MAAM,EAAEI,SAAS,CAAC;EACrD;EAEAE,OAAO,CAACC,UAAkB;IACxB,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAO,GAAG,IAAI,CAACR,MAAM,IAAIO,UAAU,EAAE,CAAC;EAC/D;;;uBAfWV,gBAAgB;IAAA;EAAA;;;aAAhBA,gBAAgB;MAAAY,SAAhBZ,gBAAgB;MAAAa,YADH;IAAM;EAAA","names":["environment","ProfessorService","constructor","http","apiUrl","listar","get","salvar","professor","post","excluir","identifier","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\DevTools\\Projects\\UNIFOR\\Desafio-UNIFOR-Hexagonal-Quarkus-Angular\\frontend\\unifor-frontend\\src\\app\\features\\admin\\services\\professor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nexport interface Professor {\r\n  identifier?: number;\r\n  nome: string;\r\n  email: string;\r\n  area: string;\r\n  coordenador: boolean;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProfessorService {\r\n  private apiUrl = `${environment.apiUrl}/professores`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  listar(): Observable<Professor[]> {\r\n    return this.http.get<Professor[]>(this.apiUrl);\r\n  }\r\n\r\n  salvar(professor: Professor): Observable<void> {\r\n    return this.http.post<void>(this.apiUrl, professor);\r\n  }\r\n\r\n  excluir(identifier: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${identifier}`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}